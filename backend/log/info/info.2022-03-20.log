2022-03-20 07:41:43.146 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 3116 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 07:41:43.150 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 07:41:44.658 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 07:41:44.661 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 07:41:44.729 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2022-03-20 07:41:45.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f36b8888] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cdbad42c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$642c635b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$cfac6504] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c8711c58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b5b3bf6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a1f4cff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:45.907 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 07:41:45.918 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 07:41:46.272 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 07:41:46.272 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 07:41:46.272 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 07:41:46.272 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 07:41:46.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:46.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:46.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.048 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.050 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$bfbfe2ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$720ca505] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$2d238af4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$53ef0222] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.294 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a1cb807b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.313 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:41:47.775 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 07:41:47.787 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 07:41:47.791 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 07:41:47.791 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 07:41:47.796 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 07:41:47.938 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 07:41:47.938 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4747 ms
2022-03-20 07:41:48.460 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 07:41:48.461 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 07:41:49.078 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 07:41:49.104 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 07:41:49.104 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 07:41:49.107 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 07:41:49.108 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 07:41:49.109 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647733309094'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 07:41:49.109 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 07:41:49.109 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 07:41:49.110 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@30ed4034
2022-03-20 07:41:49.174 febs [main] INFO  p6spy - 2022-03-20 07:41:49 | 耗时 21 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 07:41:49.781 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 07:41:50.947 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 07:41:51.002 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 07:41:51.072 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 07:41:51.084 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 07:41:51.095 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 07:41:51.096 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 07:41:51.110 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 07:41:51.112 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 8.627 seconds (JVM running for 10.953)
2022-03-20 07:41:51.121 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 07:41:51.122 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 07:41:51.122 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 07:41:51.155 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 07:41:51.181 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 22 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:41:51.247 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 07:41:51.270 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 13 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 07:41:51.288 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 07:41:51.292 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:41:51.295 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 07:41:51.297 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 07:41:51.300 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 07:41:51.302 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:41:51.304 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 07:41:51.306 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 07:41:51.309 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 07:41:51.311 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:41:51.314 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 07:41:51.316 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 07:41:51.317 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 07:41:51.319 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:41:51.321 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 07:41:51.324 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 07:41:51.326 febs [main] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 07:41:51.327 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 07:41:51.327 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 07:41:51.327 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 07:41:51.327 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 07:41:51.327 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T07:41:51.327
2022-03-20 07:41:51.966 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 07:41:51.966 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 07:41:51.968 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 07:41:51 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 07:41:51.978 febs [RMI TCP Connection(4)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-20 07:41:52.088 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 07:41:52.114 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 07:41:52.114 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647695743106"'s failed in-progress jobs.
2022-03-20 07:41:52.122 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647733309094 started.
2022-03-20 07:43:18.733 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:43:18.822 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:43:18.848 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:43:18.818+0800' WHERE username = 'fank';
2022-03-20 07:43:18.852 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:43:18.861 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 16 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:43:18.826+0800' WHERE username = 'fank';
2022-03-20 07:43:18.864 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:43:18.901 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 25 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T07:43:18.866+0800', '', '127.0.0.1' );
2022-03-20 07:43:18.913 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:43:18 | 耗时 36 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T07:43:18.866+0800', '', '127.0.0.1' );
2022-03-20 07:43:19.027 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:19.050 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 07:43:19.087 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:19.093 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 07:43:19.280 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:19.281 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:19.303 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 11 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 07:43:19.316 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 9 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 07:43:19.367 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 47 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 07:43:19.383 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 11 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:43:19.387 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 102 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:43:19.389 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:43:19.391 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:43:19.393 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:43:19.396 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 07:43:19.418 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:19 | 耗时 33 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 07:43:27.004 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:27.004 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:27.017 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:43:27 | 耗时 7 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:43:27.063 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:43:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:43:27.068 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:43:27 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:43:33.841 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:33.854 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:43:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM epidemic_register er LEFT JOIN t_user tu ON (tu.USER_ID = er.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:43:33.855 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:43:33 | 耗时 0 ms | SQL 语句：
SELECT er.id, er.user_id AS userId, er.temperature, er.code_status AS codeStatus, er.through_city AS throughCity, er.create_date AS createDate, oi.`name`, oi.phone FROM epidemic_register er LEFT JOIN t_user tu ON ( tu.USER_ID = er.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID) WHERE 1 = 1 AND oi.user_id = 14 ORDER BY er.create_date LIMIT 0,10;
2022-03-20 07:43:35.478 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:35.478 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:43:35.481 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:43:35 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:43:35.492 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:43:35.494 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:43:35 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:44:02.231 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:44:02.231 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:44:02.251 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:44:02 | 耗时 12 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2022-03-20 07:44:02.256 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:44:02 | 耗时 22 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:44:09.501 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:44:09.508 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:44:09 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 2;
2022-03-20 07:46:13.411 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:46:13.412 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:46:13.417 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:46:13 | 耗时 4 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:46:13.424 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 07:46:13 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:46:13.426 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 07:46:13 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:46:29.847 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:46:29.847 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:46:29.849 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:46:29 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:46:29.853 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:46:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:46:29.854 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 07:46:29 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:48:01.809 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:48:01.814 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:48:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:48:04.232 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:48:04.233 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:48:04.240 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:48:04 | 耗时 5 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:48:04.241 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:48:04 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:48:04.243 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:48:04 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:50:00.939 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:50:00.939 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:50:00.944 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 07:50:00.947 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 07:50:00.952 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 07:50:00.955 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:50:00.959 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 07:50:00.983 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 40 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:50:00.985 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:50:00.986 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:50:00.987 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:50:00.989 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:50:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 07:50:31.004 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:50:31.004 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:50:31.006 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 07:50:31.009 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:50:31.010 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 07:50:31.010 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:50:31.012 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 07:50:31.012 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:50:31.014 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:50:31.014 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:50:31.015 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 07:50:31.016 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:50:31 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 07:51:10.412 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:10.412 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:10.417 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:51:10 | 耗时 3 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:51:10.418 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:51:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:51:10.420 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:51:10 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:51:14.036 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:29.451 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:29.456 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:51:29.458 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:29 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:51:30.835 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:49.218 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:51:49.226 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:51:49.219+0800' WHERE username = 'fank';
2022-03-20 07:51:49.231 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:51:49.256 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T07:51:49.240+0800', '', '127.0.0.1' );
2022-03-20 07:51:49.275 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:49.280 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 07:51:49.509 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:49.509 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:49.513 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 07:51:49.517 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 07:51:49.519 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 07:51:49.520 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:51:49.522 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 07:51:49.538 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 23 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:51:49.540 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:51:49.541 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:51:49.545 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:51:49.547 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:51:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 07:51:52.827 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:52.827 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:51:52.834 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:51:52 | 耗时 4 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 07:51:52.837 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:52 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 07:51:52.839 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:51:52 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 07:51:57.617 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:53:50.798 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:53:50.808 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:53:50 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:53:50.800+0800' WHERE username = 'mrbird';
2022-03-20 07:53:50.812 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:53:50 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:53:50.826 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:53:50 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T07:53:50.823+0800', '', '127.0.0.1' );
2022-03-20 07:53:50.848 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:53:50.853 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:53:50 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-20 07:53:51.102 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:53:51.102 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:53:51.161 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 56 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:53:51.161 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 57 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 07:53:51.162 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:53:51.164 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:53:51.166 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:53:51.168 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 07:53:51.172 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 10 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 07:53:51.175 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:53:51 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT SUM(pm.price) AS received FROM payment_manage pm) AS on1, (SELECT SUM(pm.price) AS advance FROM payment_manage pm,payment_record pr WHERE pr.payment_id = pm.id) AS on2;
2022-03-20 07:54:33.879 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:33.902 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:54:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 07:54:33.903 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:54:33 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 07:54:36.075 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:36.081 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:36 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 07:54:36.115 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:36.123 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:54:36 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 07:54:38.686 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:38.698 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 0 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('75');
2022-03-20 07:54:38.715 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 12 ms | SQL 语句：
UPDATE t_role SET role_name='业主', remark='', modify_time='2022-03-20T07:54:38.699+0800' WHERE ROLE_ID=75;
2022-03-20 07:54:38.727 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 75;
2022-03-20 07:54:38.737 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 151 );
2022-03-20 07:54:38.745 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 152 );
2022-03-20 07:54:38.753 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 153 );
2022-03-20 07:54:38.762 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 154 );
2022-03-20 07:54:38.769 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 155 );
2022-03-20 07:54:38.777 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 156 );
2022-03-20 07:54:38.786 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 157 );
2022-03-20 07:54:38.787 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 07:54:38.789 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 07:54:38.791 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 07:54:38.820 febs [asyncTaskExecutor-1] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 16 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 101, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=75, roleName=业主, remark=, createTime=null, modifyTime=Sun Mar 20 07:54:38 CST 2022, createTimeFrom=null, createTimeTo=null, menuId=151,152,153,154,155,156,157)"', '127.0.0.1', '2022-03-20T07:54:38.800+0800', '' );
2022-03-20 07:54:38.845 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:38.853 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 07:54:38.855 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:38 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 07:54:53.023 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:54:53.042 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 16 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:54:53.024+0800' WHERE username = 'fank';
2022-03-20 07:54:53.043 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:54:53.055 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T07:54:53.052+0800', '', '127.0.0.1' );
2022-03-20 07:54:53.074 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:53.076 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 07:54:53.220 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:53.220 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:53.222 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 07:54:53.224 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 07:54:53.225 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:54:53.226 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:54:53.227 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 07:54:53.228 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:54:53.229 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:54:53.232 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 07:54:53.232 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 4 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:54:53.235 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:53 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 07:54:59.380 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 07:54:59.389 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T07:54:59.381+0800' WHERE username = 'admin';
2022-03-20 07:54:59.390 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:54:59.404 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T07:54:59.400+0800', '', '127.0.0.1' );
2022-03-20 07:54:59.423 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:59.425 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 07:54:59.629 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:59.630 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:54:59.802 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 170 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 07:54:59.802 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 167 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:54:59.803 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:54:59.804 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 07:54:59.804 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:54:59.805 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
SELECT * FROM (SELECT SUM(pm.price) AS received FROM payment_manage pm) AS on1, (SELECT SUM(pm.price) AS advance FROM payment_manage pm,payment_record pr WHERE pr.payment_id = pm.id) AS on2;
2022-03-20 07:54:59.806 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:54:59.807 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:54:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 07:57:03.790 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647733309094 paused.
2022-03-20 07:57:03.790 febs [Thread-22] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 07:57:03.796 febs [Thread-22] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 07:57:03.796 febs [Thread-22] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 07:57:03.796 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647733309094 shutting down.
2022-03-20 07:57:03.797 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647733309094 paused.
2022-03-20 07:57:03.798 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647733309094 shutdown complete.
2022-03-20 07:57:03.802 febs [Thread-22] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 07:57:03.803 febs [Thread-22] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 07:57:03.807 febs [Thread-22] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 07:57:07.494 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 12844 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 07:57:07.499 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 07:57:08.498 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 07:57:08.500 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 07:57:08.561 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2022-03-20 07:57:08.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ebc10cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:08.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c610584f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.052 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c81e77e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c801e927] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c0c6a07b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ae09438d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9a4a5418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.571 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.573 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 07:57:09.579 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 07:57:09.751 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 07:57:09.751 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 07:57:09.751 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 07:57:09.751 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 07:57:09.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:09.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.374 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.395 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.505 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b815670f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6a622928] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$25790f17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.585 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4c448645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.598 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9a21049e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.615 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.656 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 07:57:10.951 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 07:57:10.960 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 07:57:10.964 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 07:57:10.964 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 07:57:10.969 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 07:57:11.064 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 07:57:11.064 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3466 ms
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 07:57:11.650 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 07:57:12.174 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 07:57:12.183 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 07:57:12.183 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 07:57:12.186 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 07:57:12.187 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 07:57:12.188 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647734232175'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 07:57:12.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 07:57:12.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 07:57:12.189 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@43df1377
2022-03-20 07:57:12.236 febs [main] INFO  p6spy - 2022-03-20 07:57:12 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 07:57:12.831 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 07:57:13.932 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 07:57:13.982 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 07:57:14.051 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 07:57:14.063 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 07:57:14.073 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 07:57:14.074 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 07:57:14.088 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 07:57:14.090 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.115 seconds (JVM running for 8.153)
2022-03-20 07:57:14.098 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 07:57:14.099 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 07:57:14.099 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 07:57:14.128 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 07:57:14.135 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:57:14.198 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 07:57:14.215 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 07:57:14.228 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 07:57:14.232 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:57:14.235 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 07:57:14.238 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 07:57:14.241 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 07:57:14.243 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:57:14.245 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 07:57:14.248 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 07:57:14.251 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 07:57:14.254 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:57:14.260 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 07:57:14.263 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 07:57:14.264 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 07:57:14.267 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 07:57:14.270 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 07:57:14.272 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 07:57:14.274 febs [main] INFO  p6spy - 2022-03-20 07:57:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 07:57:14.275 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 07:57:14.275 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 07:57:14.275 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 07:57:14.275 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 07:57:14.275 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T07:57:14.275
2022-03-20 07:57:14.799 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 07:57:14.799 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 07:57:14.809 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-03-20 07:57:15.060 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 07:57:15.079 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 07:57:15.079 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647733309094"'s failed in-progress jobs.
2022-03-20 07:57:15.087 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647734232175 started.
2022-03-20 07:57:15.115 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-20 07:57:15 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 07:58:00.714 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:58:00.714 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:58:00.776 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 19 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 07:58:00.810 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 33 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 07:58:00.817 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 5 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 07:58:00.823 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 07:58:00.828 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 07:58:00.830 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 07:58:00.908 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 98 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 07:58:00.910 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:58:00.912 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 07:58:00.914 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 07:58:00.916 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 07:58:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 07:58:24.641 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:58:24.714 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:58:24 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2022-03-20 07:58:24.718 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 07:58:24 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2022-03-20 07:58:25.624 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:58:25.625 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 07:58:25.651 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 07:58:25 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 07:58:25.660 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 07:58:25 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) FROM daily_manage dm LEFT JOIN t_user tu ON (tu.USER_ID = dm.user_id) LEFT JOIN worker_info wi ON (wi.id = dm.worker) WHERE 1 = 1;
2022-03-20 07:58:25.661 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 07:58:25 | 耗时 0 ms | SQL 语句：
SELECT dm.id, dm.type, dm.content, dm.images, dm.user_id AS userId, dm.create_date AS createDate, dm.read_status AS readStatus, dm.worker AS worker, tu.USERNAME AS userName, wi.`name` AS workerName, wi.phone, wi.image FROM daily_manage dm LEFT JOIN t_user tu ON ( tu.USER_ID = dm.user_id ) LEFT JOIN worker_info wi ON ( wi.id = dm.worker ) WHERE 1 = 1 ORDER BY dm.create_date DESC LIMIT 0,10;
2022-03-20 08:00:30.476 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:00:30.476 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:00:30.550 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 72 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:00:30.581 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 103 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:00:30.581 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 29 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:00:30.582 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:00:30.584 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:00:30.585 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:00:30.587 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 08:00:30.595 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 13 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:00:30.598 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:00:30.602 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:00:30.603 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:00:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:01:00.547 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:00.550 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:01:00.552 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:01:00.553 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:01:00.557 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:01:00.561 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:01:00.563 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:01:00.568 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:00.573 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:01:00.574 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:01:00.576 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:01:00.578 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:01:00.580 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:01:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 08:01:25.674 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:01:25.720 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 28 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:01:25.682+0800' WHERE username = 'fank';
2022-03-20 08:01:25.724 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:01:25.774 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:01:25.766+0800', '', '127.0.0.1' );
2022-03-20 08:01:25.806 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:01:25.808 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:25.811 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:01:25.808+0800' WHERE username = 'fank';
2022-03-20 08:01:25.814 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:01:25.820 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:01:25.816+0800', '', '127.0.0.1' );
2022-03-20 08:01:25.825 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:01:25.857 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:25.861 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:01:25 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:01:26.024 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:26.027 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:26.031 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:01:26.034 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:01:26.037 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:01:26.038 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:01:26.044 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:01:26.046 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:01:26.048 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:01:26.048 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 7 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:01:26.049 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:01:26.051 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:01:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:01:48.899 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:48.899 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:01:48.905 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:01:48 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 08:01:48.908 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:01:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM daily_manage dm LEFT JOIN t_user tu ON (tu.USER_ID = dm.user_id) LEFT JOIN worker_info wi ON (wi.id = dm.worker) WHERE 1 = 1 AND dm.user_id = 14;
2022-03-20 08:01:48.910 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:01:48 | 耗时 0 ms | SQL 语句：
SELECT dm.id, dm.type, dm.content, dm.images, dm.user_id AS userId, dm.create_date AS createDate, dm.read_status AS readStatus, dm.worker AS worker, tu.USERNAME AS userName, wi.`name` AS workerName, wi.phone, wi.image FROM daily_manage dm LEFT JOIN t_user tu ON ( tu.USER_ID = dm.user_id ) LEFT JOIN worker_info wi ON ( wi.id = dm.worker ) WHERE 1 = 1 AND dm.user_id = 14 ORDER BY dm.create_date DESC LIMIT 0,10;
2022-03-20 08:03:15.099 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:03:15.099 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:03:15.135 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 33 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:03:15.154 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 17 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:03:15.157 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:03:15.160 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:03:15.163 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:03:15.170 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 68 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:03:15.171 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:03:15.172 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:03:15.174 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:03:15.176 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:03:15 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:03:50.843 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:03:50.854 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:03:50.855 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:03:50.857 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:03:50.859 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:03:50.860 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:03:50.863 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:03:50.867 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 10 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:03:50.869 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:03:50.870 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:03:50.872 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:03:50.873 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:03:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:04:54.299 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:04:54.301 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:04:54.303 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:04:54.306 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:04:54.310 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:04:54.313 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:04:54.316 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:04:54.338 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 34 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:04:54.340 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:04:54.342 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:04:54.343 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:04:54.345 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:04:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:05:18.216 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:05:18.219 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:05:18.219 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:05:18.221 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:05:18.222 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:05:18.224 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:05:18.226 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:05:18.231 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 8 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:05:18.232 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:05:18.234 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:05:18.235 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:05:18.237 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:05:18 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:05:27.152 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:05:27.154 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:05:27.180 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:05:27 | 耗时 17 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:05:27.189 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:05:27 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:05:27.191 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:05:27 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:06:23.049 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:06:23.067 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 11 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:06:23.051+0800' WHERE username = 'mrbird';
2022-03-20 08:06:23.071 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:06:23.097 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T08:06:23.092+0800', '', '127.0.0.1' );
2022-03-20 08:06:23.121 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:23.128 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-20 08:06:23.363 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:23.366 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:23.397 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 32 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:06:23.397 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 29 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:06:23.398 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:06:23.400 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:06:23.401 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:06:23.403 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:06:23.414 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 16 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:06:23.418 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:06:23.421 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:06:23.424 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:06:23.425 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:06:29.122 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:29.130 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:06:29 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:06:33.573 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:33.584 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:06:33 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:06:50.515 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:06:50.521 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:06:50 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:07:12.020 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:12.052 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:07:12 | 耗时 10 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, path, component, type, order_num, create_time ) VALUES ( 0, '支付结果', '/pay', 'PageView', '0', 8.0, '2022-03-20T08:07:12.035+0800' );
2022-03-20 08:07:12.083 febs [asyncTaskExecutor-1] INFO  p6spy - 2022-03-20 08:07:12 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 27, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=158, parentId=0, menuName=支付结果, path=/pay, component=PageView, perms=null, icon=null, type=0, orderNum=8.0, createTime=Sun Mar 20 08:07:12 CST 2022, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-20T08:07:12.069+0800', '' );
2022-03-20 08:07:12.234 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:12.239 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:07:12 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:07:17.956 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:17.960 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:07:17 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:07:36.032 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:36.047 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 4 ms | SQL 语句：
UPDATE t_menu SET parent_id=158, menu_name='支付结果', path='/my/pay', component='my/pay/Pay', icon='alipay', type='0', order_num=6.0, modify_time='2022-03-20T08:07:36.037+0800' WHERE MENU_ID=157;
2022-03-20 08:07:36.049 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '157' );
2022-03-20 08:07:36.051 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:07:36.053 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:07:36.057 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:07:36.071 febs [asyncTaskExecutor-2] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 30, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=157, parentId=158, menuName=支付结果, path=/my/pay, component=my/pay/Pay, perms=null, icon=alipay, type=0, orderNum=6.0, createTime=null, modifyTime=Sun Mar 20 08:07:36 CST 2022, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-20T08:07:36.068+0800', '' );
2022-03-20 08:07:36.272 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:36.276 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:07:36 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:07:40.082 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:40.098 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:07:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:07:40.099 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:07:40 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:07:43.502 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:43.507 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:07:43 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:07:43.532 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:07:43.542 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:07:43 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:08:40.852 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:40.853 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:40.864 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:08:40 | 耗时 9 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:08:40.867 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:08:40 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:08:40.869 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:08:40 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:08:43.657 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:43.657 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:43.660 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:08:43.662 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:08:43.664 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:08:43.666 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:08:43.669 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:08:43.709 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 49 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:08:43.710 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:08:43.711 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:08:43.712 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:08:43.714 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:08:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:08:51.059 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:51.059 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:08:51.063 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:08:51 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:08:51.067 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:08:51 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:08:51.069 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:08:51 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:08:54.905 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:09:13.854 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:09:13.860 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:09:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:09:13.861 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:09:13 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:09:15.234 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:09:34.628 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:09:34.642 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:09:34 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:09:34.643 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:09:34 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:09:35.554 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:09:35.562 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:09:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:09:35.563 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:09:35 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:09:37.788 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:10:15.590 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:10:15.594 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:10:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:10:15.596 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:10:15 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:10:53.724 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:10:53.728 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:10:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:10:53.730 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:10:53 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:10:55.951 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:10:55.951 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:10:55.953 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:10:55 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:10:55.956 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:10:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:10:55.958 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:10:55 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:11:17.239 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:17.255 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:17 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:11:17.308 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:17.318 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:11:17 | 耗时 6 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:11:19.694 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:19.710 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 5 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('75');
2022-03-20 08:11:19.723 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 9 ms | SQL 语句：
UPDATE t_role SET role_name='业主', remark='', modify_time='2022-03-20T08:11:19.711+0800' WHERE ROLE_ID=75;
2022-03-20 08:11:19.735 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 9 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 75;
2022-03-20 08:11:19.747 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 151 );
2022-03-20 08:11:19.756 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 152 );
2022-03-20 08:11:19.764 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 153 );
2022-03-20 08:11:19.773 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 154 );
2022-03-20 08:11:19.780 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 155 );
2022-03-20 08:11:19.791 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 156 );
2022-03-20 08:11:19.799 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 157 );
2022-03-20 08:11:19.808 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 158 );
2022-03-20 08:11:19.810 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:11:19.812 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:11:19.814 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:11:19.821 febs [asyncTaskExecutor-3] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 117, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=75, roleName=业主, remark=, createTime=null, modifyTime=Sun Mar 20 08:11:19 CST 2022, createTimeFrom=null, createTimeTo=null, menuId=151,152,153,154,155,156,157,158)"', '127.0.0.1', '2022-03-20T08:11:19.817+0800', '' );
2022-03-20 08:11:19.862 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:19.869 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:11:19.870 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:19 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:11:25.723 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:25.727 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:25.749 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 24 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:11:25.765 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 14 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:11:25.768 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:11:25.770 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:11:25.773 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:11:25.774 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:11:25.781 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 51 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:11:25.782 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:11:25.783 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:11:25.784 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:11:25.786 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:11:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:11:33.479 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:33.483 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:11:33 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:11:33.506 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:33.510 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:33 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:11:36.471 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:36.475 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 0 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('75');
2022-03-20 08:11:36.491 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 14 ms | SQL 语句：
UPDATE t_role SET role_name='业主', remark='', modify_time='2022-03-20T08:11:36.475+0800' WHERE ROLE_ID=75;
2022-03-20 08:11:36.500 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 8 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 75;
2022-03-20 08:11:36.511 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 151 );
2022-03-20 08:11:36.519 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 152 );
2022-03-20 08:11:36.525 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 153 );
2022-03-20 08:11:36.534 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 154 );
2022-03-20 08:11:36.542 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 155 );
2022-03-20 08:11:36.549 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 156 );
2022-03-20 08:11:36.556 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 157 );
2022-03-20 08:11:36.557 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:11:36.558 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:11:36.561 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:11:36.567 febs [asyncTaskExecutor-4] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 88, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=75, roleName=业主, remark=, createTime=null, modifyTime=Sun Mar 20 08:11:36 CST 2022, createTimeFrom=null, createTimeTo=null, menuId=151,152,153,154,155,156,157)"', '127.0.0.1', '2022-03-20T08:11:36.564+0800', '' );
2022-03-20 08:11:36.605 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:36.611 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:11:36.612 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:36 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:11:46.426 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:11:46.436 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 7 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:11:46.427+0800' WHERE username = 'fank';
2022-03-20 08:11:46.437 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:11:46.449 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:11:46.446+0800', '', '127.0.0.1' );
2022-03-20 08:11:46.470 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:46.472 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:11:46.621 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:46.622 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:11:46.623 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:11:46.625 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:11:46.627 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:11:46.629 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:11:46.631 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 6 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:11:46.632 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:11:46.634 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:11:46.635 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 5 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:11:46.636 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:11:46.637 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:11:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:12:25.221 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:12:25.226 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:12:25.223+0800' WHERE username = 'mrbird';
2022-03-20 08:12:25.256 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:12:25.295 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T08:12:25.292+0800', '', '127.0.0.1' );
2022-03-20 08:12:25.315 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:25.318 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-20 08:12:25.521 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:25.521 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:25.609 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 85 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:12:25.609 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 86 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:12:25.610 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:12:25.612 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:12:25.614 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:12:25.615 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 5 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:12:25.615 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:12:25.616 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:12:25.617 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:12:25.620 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:12:25.621 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:12:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:12:28.673 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:28.681 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:12:28 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:12:28.682 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:12:28 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:12:31.240 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:31.245 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:12:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:12:31.270 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:12:31.273 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:12:31 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:15:31.679 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:15:31.689 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:15:31 | 耗时 7 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:15:31.681+0800' WHERE username = 'mrbird';
2022-03-20 08:15:31.695 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:15:31 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:15:31.713 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:15:31 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T08:15:31.707+0800', '', '127.0.0.1' );
2022-03-20 08:15:31.966 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:15:31.967 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:15:32.007 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 37 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:15:32.007 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 38 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:15:32.008 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:15:32.009 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:15:32.010 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:15:32.012 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:15:32.023 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 15 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:15:32.027 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:15:32.029 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:15:32.031 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:15:32.032 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:15:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:15:35.057 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:15:35.066 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:15:35 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:15:35.067 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:15:35 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:15:38.520 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:15:38.529 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:15:38 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:15:45.229 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:15:45.233 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:15:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:16:53.881 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:16:53.897 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 9 ms | SQL 语句：
UPDATE t_menu SET parent_id=151, menu_name='支付结果', path='/my/pay', component='my/pay/Pay', icon='alipay', type='0', order_num=6.0, modify_time='2022-03-20T08:16:53.884+0800' WHERE MENU_ID=157;
2022-03-20 08:16:53.900 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 2 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '157' );
2022-03-20 08:16:53.902 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:16:53.904 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:16:53.907 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:16:53.921 febs [asyncTaskExecutor-5] INFO  p6spy - 2022-03-20 08:16:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 30, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=157, parentId=151, menuName=支付结果, path=/my/pay, component=my/pay/Pay, perms=null, icon=alipay, type=0, orderNum=6.0, createTime=null, modifyTime=Sun Mar 20 08:16:53 CST 2022, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-20T08:16:53.917+0800', '' );
2022-03-20 08:16:54.126 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:16:54.130 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:16:54 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:16:57.387 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:16:57.392 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:16:57 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:17:04.886 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:04.890 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:17:04 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:17:04.911 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:04.914 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:04 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:17:16.762 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:17:16.767 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:17:16.763+0800' WHERE username = 'fank';
2022-03-20 08:17:16.768 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:17:16.784 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:17:16.779+0800', '', '127.0.0.1' );
2022-03-20 08:17:16.807 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:16.809 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:17:16.958 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:16.958 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:16.981 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 21 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:17:16.983 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:17:16.988 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:17:16.990 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:17:16.992 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:17:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:17:17.013 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:17 | 耗时 53 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:17:17.014 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:17:17.016 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:17:17.017 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:17:17.019 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:17:17 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:17:34.965 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:34.966 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:17:34.968 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:17:34.970 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:17:34.972 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:17:34.972 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:17:34.974 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:17:34.974 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:17:34.975 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:17:34.975 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:17:34.977 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:17:34.978 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:17:34 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:19:43.260 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:19:43.269 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:19:43.262+0800' WHERE username = 'mrbird';
2022-03-20 08:19:43.273 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:19:43.287 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T08:19:43.283+0800', '', '127.0.0.1' );
2022-03-20 08:19:43.305 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:19:43.310 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-20 08:19:43.548 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:19:43.549 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:19:43.713 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 162 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:19:43.714 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:19:43.715 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:19:43.717 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:19:43.718 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:19:43.736 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 186 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:19:43.744 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 7 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:19:43.749 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:19:43.751 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:19:43.754 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:19:43.756 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:19:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:19:45.908 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:19:45.913 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:19:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:28:19.202 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.209 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.226 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 21 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:28:19.236 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 10 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:28:19.241 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:28:19.243 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:28:19.246 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:28:19.247 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:28:19.253 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 40 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:28:19.254 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:28:19.256 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:28:19.257 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:28:19.259 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:28:19.294 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.295 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.297 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:28:19.298 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:28:19.299 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:28:19.301 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:28:19.301 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:28:19.302 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:28:19.302 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:28:19.303 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:28:19.303 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:28:19.307 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:28:19.309 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:28:19.649 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.650 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:19.657 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 6 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:28:19.663 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:28:19.664 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:28:19 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:28:24.204 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:24.230 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:28:24 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:28:24.231 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:28:24 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:28:26.355 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:26.361 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:28:26 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:28:31.170 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:31.174 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:28:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:28:52.179 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:28:52.182 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:28:52 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:29:02.150 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:02.157 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:29:02 | 耗时 1 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ( '158' );
2022-03-20 08:29:02.159 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:29:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE parent_id IN ('158');
2022-03-20 08:29:02.165 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:29:02 | 耗时 5 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '158' );
2022-03-20 08:29:02.184 febs [asyncTaskExecutor-1] INFO  p6spy - 2022-03-20 08:29:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '删除菜单/按钮', 25, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "158"', '127.0.0.1', '2022-03-20T08:29:02.179+0800', '' );
2022-03-20 08:29:02.337 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:02.341 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:29:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:29:06.489 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:06.493 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:29:06 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:29:31.506 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:31.516 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 7 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ( '157' );
2022-03-20 08:29:31.518 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE parent_id IN ('157');
2022-03-20 08:29:31.525 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 6 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '157' );
2022-03-20 08:29:31.527 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:29:31.529 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:29:31.531 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:29:31.545 febs [asyncTaskExecutor-2] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '删除菜单/按钮', 32, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "157"', '127.0.0.1', '2022-03-20T08:29:31.542+0800', '' );
2022-03-20 08:29:31.700 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:31.703 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:29:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:29:35.999 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:29:36.003 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:29:36 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:30:30.915 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:30:30.923 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:30:30 | 耗时 4 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, path, component, icon, type, order_num, create_time ) VALUES ( 0, '支付结果', '/my/pay', 'PayPageView', '', '0', 8.0, '2022-03-20T08:30:30.918+0800' );
2022-03-20 08:30:30.934 febs [asyncTaskExecutor-3] INFO  p6spy - 2022-03-20 08:30:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 12, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=159, parentId=0, menuName=支付结果, path=/my/pay, component=PayPageView, perms=null, icon=, type=0, orderNum=8.0, createTime=Sun Mar 20 08:30:30 CST 2022, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-20T08:30:30.931+0800', '' );
2022-03-20 08:30:31.105 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:30:31.108 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:30:49.879 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:30:49.888 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:30:49 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:30:49.880+0800' WHERE username = 'fank';
2022-03-20 08:30:49.889 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:30:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:30:49.901 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:30:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:30:49.897+0800', '', '127.0.0.1' );
2022-03-20 08:30:49.917 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:30:49.920 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:30:49 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:30:50.066 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:30:50.066 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:30:50.075 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 6 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:30:50.078 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:30:50.082 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:30:50.084 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:30:50.087 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 18 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:30:50.087 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:30:50.088 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:30:50.089 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:30:50.091 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:30:50.093 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:30:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:31:16.465 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:16.470 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:16.474 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 6 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:31:16.477 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:31:16.481 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:31:16.483 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:31:16.485 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:31:16.522 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 49 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:31:16.523 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:16.524 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:16.526 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:31:16.528 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:31:25.850 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:31:25.855 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:25 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:31:25.851+0800' WHERE username = 'mrbird';
2022-03-20 08:31:25.858 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:25 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:31:25.872 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:25 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2022-03-20T08:31:25.867+0800', '', '127.0.0.1' );
2022-03-20 08:31:25.890 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:25.895 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:31:25 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2022-03-20 08:31:26.110 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:26.112 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:26.201 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 89 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:31:26.201 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 86 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:31:26.203 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:26.204 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:26.204 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:31:26.205 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:31:26.205 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:31:26.206 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:31:26.207 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:31:26.209 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:31:26.211 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:31:40.106 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:40.107 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:40.126 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 17 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:31:40.126 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 16 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:31:40.128 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:40.130 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:31:40.130 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:31:40.131 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:31:40.131 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:31:40.132 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:31:40.132 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2022-03-20 08:31:40.135 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:31:40.136 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:31:40.529 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:40.529 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:40.535 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 5 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:31:40.546 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:31:40.547 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:31:49.627 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:49.631 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:31:49 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:31:52.988 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:31:52.992 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:31:52 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:32:06.504 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:06.508 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:32:06 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2022-03-20 08:32:38.199 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:38.207 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:32:38 | 耗时 3 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='支付结果', path='/my/pay', component='my/pay/Pay', icon='global', type='0', order_num=8.0, modify_time='2022-03-20T08:32:38.203+0800' WHERE MENU_ID=159;
2022-03-20 08:32:38.209 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:32:38 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '159' );
2022-03-20 08:32:38.227 febs [asyncTaskExecutor-4] INFO  p6spy - 2022-03-20 08:32:38 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 20, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=159, parentId=0, menuName=支付结果, path=/my/pay, component=my/pay/Pay, perms=null, icon=global, type=0, orderNum=8.0, createTime=null, modifyTime=Sun Mar 20 08:32:38 CST 2022, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2022-03-20T08:32:38.223+0800', '' );
2022-03-20 08:32:38.477 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:38.481 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:32:38 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:32:41.482 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:41.493 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:32:41 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:32:41.494 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:32:41 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:32:43.633 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:43.642 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:32:43 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2022-03-20 08:32:43.685 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:43.689 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:32:43 | 耗时 1 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '75';
2022-03-20 08:32:45.936 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:45.942 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 3 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('75');
2022-03-20 08:32:45.952 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 8 ms | SQL 语句：
UPDATE t_role SET role_name='业主', remark='', modify_time='2022-03-20T08:32:45.943+0800' WHERE ROLE_ID=75;
2022-03-20 08:32:45.963 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 9 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 75;
2022-03-20 08:32:45.974 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 151 );
2022-03-20 08:32:45.988 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 13 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 152 );
2022-03-20 08:32:45.995 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:45 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 153 );
2022-03-20 08:32:46.001 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 154 );
2022-03-20 08:32:46.010 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 155 );
2022-03-20 08:32:46.018 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 156 );
2022-03-20 08:32:46.025 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 157 );
2022-03-20 08:32:46.031 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 75, 159 );
2022-03-20 08:32:46.042 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='14' ;
2022-03-20 08:32:46.043 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:32:46.045 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:32:46.083 febs [asyncTaskExecutor-5] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 34 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 107, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=75, roleName=业主, remark=, createTime=null, modifyTime=Sun Mar 20 08:32:45 CST 2022, createTimeFrom=null, createTimeTo=null, menuId=151,152,153,154,155,156,157,159)"', '127.0.0.1', '2022-03-20T08:32:46.047+0800', '' );
2022-03-20 08:32:46.091 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:46.097 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2022-03-20 08:32:46.098 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:46 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2022-03-20 08:32:53.494 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:32:53.500 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:32:53.495+0800' WHERE username = 'fank';
2022-03-20 08:32:53.502 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:32:53.512 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:32:53.509+0800', '', '127.0.0.1' );
2022-03-20 08:32:53.533 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:53.536 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:32:53.687 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:53.688 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:32:53.692 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 3 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:32:53.695 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:32:53.700 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:32:53.702 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:32:53.705 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:32:53.710 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 20 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:32:53.711 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:32:53.713 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:32:53.715 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:32:53.716 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:32:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:33:11.315 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:33:11.315 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:33:11.319 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:33:11 | 耗时 1 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:33:11.322 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:33:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:33:11.324 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:33:11 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:33:37.559 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:33:37.559 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:33:37.560 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:33:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:33:37.565 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:33:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:33:37.566 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:33:37 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:33:40.331 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:34:48.852 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:34:48.928 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:34:48 | 耗时 10 ms | SQL 语句：
INSERT INTO payment_record ( user_id, payment_id, create_date, payment_type ) VALUES ( 14, 10, '2022-03-20 08:34:48', 1 );
2022-03-20 08:34:52.444 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:34:52.447 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:34:52.469 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:34:52 | 耗时 21 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:34:52.470 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:34:52 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:34:52.472 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:34:52 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:35:01.372 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:01.372 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:01.374 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:35:01.376 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:35:01.378 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:35:01.380 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:35:01.383 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:35:01.426 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 51 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:35:01.427 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:35:01.428 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:35:01.430 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:35:01.431 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:35:09.046 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:35:09.050 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:35:09.047+0800' WHERE username = 'fank';
2022-03-20 08:35:09.053 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:35:09.063 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:35:09.060+0800', '', '127.0.0.1' );
2022-03-20 08:35:09.081 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:09.085 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:35:09.222 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:09.222 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:09.224 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:35:09.225 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:35:09.226 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:35:09.226 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:35:09.227 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:35:09.227 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:35:09.228 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:35:09.229 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:35:09.230 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:35:09.230 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 08:35:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:35:11.542 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:11.542 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:11.544 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:35:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:35:11.546 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:35:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:35:11.548 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:35:11 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:35:13.803 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:45.852 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:45.864 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:35:45 | 耗时 9 ms | SQL 语句：
INSERT INTO payment_record ( user_id, payment_id, create_date, payment_type ) VALUES ( 14, 14, '2022-03-20 08:35:45', 1 );
2022-03-20 08:35:49.272 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:49.276 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:49.277 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:35:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:35:49.278 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:35:49 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:35:49.279 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 08:35:49 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:35:56.196 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:56.196 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:35:56.197 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:35:56 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 08:35:56.205 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:35:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 08:35:56.207 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:35:56 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 08:36:25.956 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:36:25.956 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:36:25.964 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:36:25 | 耗时 6 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:36:25.966 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:36:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:36:25.971 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:36:25 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:36:25.973 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:36:25 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:36:25.975 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 08:36:25 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:36:26.012 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:36:26 | 耗时 53 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:36:26.013 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:36:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:36:26.014 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:36:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:36:26.015 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:36:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:36:26.016 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 08:36:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:39:37.285 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:39:37.292 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:39:37.287+0800' WHERE username = 'fank';
2022-03-20 08:39:37.296 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:39:37.308 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T08:39:37.304+0800', '', '127.0.0.1' );
2022-03-20 08:39:37.324 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:37.329 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 08:39:37.497 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:37.498 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:37.502 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 3 ms | SQL 语句：
SELECT ID,name,phone,id_number,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 08:39:37.506 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 08:39:37.511 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 4 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 08:39:37.513 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:39:37.516 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 08:39:37.562 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 63 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:39:37.564 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:39:37.565 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:39:37.567 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:39:37.568 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 08:39:50.117 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 08:39:50.150 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 30 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T08:39:50.119+0800' WHERE username = 'admin';
2022-03-20 08:39:50.153 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:39:50.231 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T08:39:50.227+0800', '', '127.0.0.1' );
2022-03-20 08:39:50.251 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:50.255 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 08:39:50.456 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:50.461 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:39:50.589 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 130 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 08:39:50.591 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 127 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 08:39:50.592 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:39:50.594 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 08:39:50.595 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 08:39:50.596 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 08:39:50.662 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 71 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 08:39:50.705 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 42 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 08:39:50.707 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 08:39:50.710 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 08:39:50.711 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 08:39:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 08:40:04.046 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:40:04.053 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:40:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 08:40:04.055 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 08:40:04 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 08:57:14.065 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 08:57:59.806 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647734232175 paused.
2022-03-20 08:57:59.806 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 08:57:59.814 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 08:57:59.814 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 08:57:59.815 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647734232175 shutting down.
2022-03-20 08:57:59.815 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647734232175 paused.
2022-03-20 08:57:59.816 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647734232175 shutdown complete.
2022-03-20 08:57:59.818 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 08:57:59.818 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 08:57:59.821 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 08:58:11.840 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 6044 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 08:58:11.843 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 08:58:12.679 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 08:58:12.681 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 08:58:12.738 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45ms. Found 0 repository interfaces.
2022-03-20 08:58:13.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$9c7bbfca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$76cb0b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3c9a9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$78bc9c46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$7181539a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.684 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$5ec3f6ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4b050737] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.704 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 08:58:13.711 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 08:58:13.869 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 08:58:13.870 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 08:58:13.870 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 08:58:13.870 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 08:58:13.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:13.887 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.578 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.636 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$68d01a2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$1b1cdc47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$d633c236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$fcff3964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$4adbb7bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.706 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 08:58:14.995 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 08:58:15.005 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 08:58:15.009 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 08:58:15.009 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 08:58:15.014 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 08:58:15.124 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 08:58:15.124 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3209 ms
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 08:58:15.621 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 08:58:15.622 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 08:58:16.099 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 08:58:16.109 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 08:58:16.109 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 08:58:16.112 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 08:58:16.113 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 08:58:16.114 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647737896100'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 08:58:16.114 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 08:58:16.114 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 08:58:16.115 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@582c1f8d
2022-03-20 08:58:16.161 febs [main] INFO  p6spy - 2022-03-20 08:58:16 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 08:58:16.707 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 08:58:17.746 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 08:58:17.795 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 08:58:17.865 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 08:58:17.877 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 08:58:17.887 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 08:58:17.889 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 08:58:17.902 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 08:58:17.904 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.614 seconds (JVM running for 7.525)
2022-03-20 08:58:17.913 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 08:58:17.913 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 08:58:17.913 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 08:58:17.950 febs [main] INFO  p6spy - 2022-03-20 08:58:17 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 08:58:17.958 febs [main] INFO  p6spy - 2022-03-20 08:58:17 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:58:18.016 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 08:58:18.037 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 10 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 08:58:18.051 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 08:58:18.056 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:58:18.058 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 08:58:18.061 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 08:58:18.064 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 08:58:18.067 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:58:18.069 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 08:58:18.072 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 08:58:18.074 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 08:58:18.077 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:58:18.081 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 08:58:18.083 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 08:58:18.085 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 08:58:18.086 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 08:58:18.089 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 08:58:18.091 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 08:58:18.092 febs [main] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 08:58:18.093 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 08:58:18.093 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 08:58:18.093 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 08:58:18.093 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 08:58:18.094 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T08:58:18.093
2022-03-20 08:58:18.322 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 08:58:18.322 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 08:58:18.322 febs [RMI TCP Connection(2)-192.168.42.78] INFO  p6spy - 2022-03-20 08:58:18 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 08:58:18.336 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-03-20 08:58:18.874 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 08:58:18.895 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 08:58:18.895 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647734232175"'s failed in-progress jobs.
2022-03-20 08:58:18.906 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647737896100 started.
2022-03-20 08:59:37.401 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 08:59:37.484 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:59:37 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 08:59:37.488 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 08:59:37 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:03:42.243 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647737896100 paused.
2022-03-20 09:03:42.243 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 09:03:42.250 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 09:03:42.251 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 09:03:42.251 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647737896100 shutting down.
2022-03-20 09:03:42.252 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647737896100 paused.
2022-03-20 09:03:42.253 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647737896100 shutdown complete.
2022-03-20 09:03:42.255 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 09:03:42.256 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 09:03:42.259 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 09:03:48.478 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 13932 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 09:03:48.481 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 09:03:49.491 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 09:03:49.492 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 09:03:49.554 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2022-03-20 09:03:49.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$a68b817b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:49.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$80dacd1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.100 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$174c5c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$82cc5df7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$7b91154b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$68d3b85d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5514c8e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.642 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 09:03:50.650 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 09:03:50.841 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 09:03:50.841 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 09:03:50.841 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 09:03:50.842 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 09:03:50.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:50.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.610 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.632 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.676 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.741 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.801 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$72dfdbdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$252c9df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$e04383e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$70efb15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$54eb796e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:51.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:03:52.182 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 09:03:52.192 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 09:03:52.196 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 09:03:52.196 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 09:03:52.202 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 09:03:52.336 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 09:03:52.336 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3776 ms
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 09:03:52.878 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 09:03:53.390 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 09:03:53.400 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 09:03:53.400 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 09:03:53.404 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 09:03:53.409 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 09:03:53.414 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647738233391'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 09:03:53.418 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 09:03:53.418 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 09:03:53.421 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@278c998
2022-03-20 09:03:53.515 febs [main] INFO  p6spy - 2022-03-20 09:03:53 | 耗时 21 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 09:03:54.108 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 09:03:55.343 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 09:03:55.397 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 09:03:55.469 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 09:03:55.481 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 09:03:55.492 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 09:03:55.493 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 09:03:55.507 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 09:03:55.509 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.5 seconds (JVM running for 8.484)
2022-03-20 09:03:55.518 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 09:03:55.519 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 09:03:55.519 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 09:03:55.562 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 09:03:55.570 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:03:55.629 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 09:03:55.643 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 09:03:55.657 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 09:03:55.661 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:03:55.664 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 09:03:55.667 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 09:03:55.670 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 09:03:55.672 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:03:55.674 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 09:03:55.677 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 09:03:55.680 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 09:03:55.682 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:03:55.688 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 09:03:55.691 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 09:03:55.693 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 09:03:55.695 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:03:55.698 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 09:03:55.701 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 09:03:55.702 febs [main] INFO  p6spy - 2022-03-20 09:03:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 09:03:55.703 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 09:03:55.703 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 09:03:55.703 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 09:03:55.703 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 09:03:55.704 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T09:03:55.704
2022-03-20 09:03:56.096 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 09:03:56.096 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 09:03:56.109 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-20 09:03:56.420 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 09:03:56 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 09:03:56.484 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 09:03:56.514 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 09:03:56.514 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647737896100"'s failed in-progress jobs.
2022-03-20 09:03:56.526 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738233391 started.
2022-03-20 09:04:45.415 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:04:45.509 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 09:04:45 | 耗时 27 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:04:45.513 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 09:04:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:05:10.202 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:05:10.208 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:05:10.210 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:05:52.548 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:05:52.562 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 09:05:52 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:05:52.563 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 09:05:52 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:05:58.901 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:05:58.914 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 09:05:58 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 09:06:01.264 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:06:01.270 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 09:06:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:06:01.272 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 09:06:01 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:06:43.676 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738233391 paused.
2022-03-20 09:06:43.676 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 09:06:43.682 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 09:06:43.682 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 09:06:43.682 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738233391 shutting down.
2022-03-20 09:06:43.682 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738233391 paused.
2022-03-20 09:06:43.684 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738233391 shutdown complete.
2022-03-20 09:06:43.689 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 09:06:43.689 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 09:06:43.692 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 09:06:47.437 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 11060 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 09:06:47.441 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 09:06:48.303 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 09:06:48.305 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 09:06:48.363 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45ms. Found 0 repository interfaces.
2022-03-20 09:06:48.631 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ad5bccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.732 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$87ab187b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.810 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e1ca7aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:48.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$899ca953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$826160a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.294 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$6fa403b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5be51444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.318 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 09:06:49.324 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 09:06:49.480 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 09:06:49.480 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 09:06:49.480 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 09:06:49.480 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 09:06:49.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:49.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.143 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.236 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$79b0273b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2bfce954] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$e713cf43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ddf4671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5bbbc4ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.313 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:06:50.633 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 09:06:50.643 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 09:06:50.646 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 09:06:50.647 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 09:06:50.651 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 09:06:50.756 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 09:06:50.756 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3237 ms
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 09:06:51.241 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 09:06:51.242 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 09:06:51.242 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 09:06:51.746 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 09:06:51.756 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 09:06:51.756 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 09:06:51.759 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 09:06:51.760 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 09:06:51.761 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647738411747'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 09:06:51.761 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 09:06:51.761 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 09:06:51.762 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@61ce238e
2022-03-20 09:06:51.821 febs [main] INFO  p6spy - 2022-03-20 09:06:51 | 耗时 18 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 09:06:52.369 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 09:06:53.433 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 09:06:53.482 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 09:06:53.555 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 09:06:53.569 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 09:06:53.580 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 09:06:53.581 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 09:06:53.595 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 09:06:53.597 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.748 seconds (JVM running for 7.658)
2022-03-20 09:06:53.606 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 09:06:53.607 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 09:06:53.607 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 09:06:53.650 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 09:06:53.658 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:06:53.715 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 09:06:53.730 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 09:06:53.744 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 09:06:53.747 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:06:53.750 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 09:06:53.752 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 09:06:53.756 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 09:06:53.758 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:06:53.761 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 09:06:53.763 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 09:06:53.766 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 09:06:53.768 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:06:53.771 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 09:06:53.774 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 09:06:53.775 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 09:06:53.777 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:06:53.780 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 09:06:53.782 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 09:06:53.783 febs [main] INFO  p6spy - 2022-03-20 09:06:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 09:06:53.784 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 09:06:53.784 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 09:06:53.784 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 09:06:53.784 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 09:06:53.784 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T09:06:53.784
2022-03-20 09:06:54.067 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-20 09:06:54 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 09:06:54.372 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 09:06:54.372 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 09:06:54.381 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-03-20 09:06:54.565 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 09:06:54.610 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738411747 started.
2022-03-20 09:07:08.252 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:07:08.350 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:07:08 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:07:08.355 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:07:08 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:07:09.633 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647738411747_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 09:07:09.633 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647738411747_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647738233391"'s failed in-progress jobs.
2022-03-20 09:08:15.516 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:08:15.522 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 09:08:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:08:15.523 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 09:08:15 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:09:00.052 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:09:00.064 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:09:00 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:09:00.066 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:09:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:09:12.744 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:09:12.749 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 09:09:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:09:12.750 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 09:09:12 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:14:05.797 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:14:05.809 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:14:05 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:14:05.810 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:14:05 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:16:22.616 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:16:22.616 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:16:22.618 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:16:22.620 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:16:22.648 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 09:16:22 | 耗时 6 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 09:16:22.648 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 09:16:22 | 耗时 27 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2022-03-20 09:16:22.649 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 09:16:22 | 耗时 25 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2022-03-20 09:16:22.659 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 09:16:22 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2022-03-20 09:16:22.660 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 09:16:22 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2022-03-20 09:17:11.512 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:17:11.522 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 09:17:11 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:17:11.523 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 09:17:11 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:18:20.893 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738411747 paused.
2022-03-20 09:18:20.893 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 09:18:20.903 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 09:18:20.903 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 09:18:20.904 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738411747 shutting down.
2022-03-20 09:18:20.904 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738411747 paused.
2022-03-20 09:18:20.905 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647738411747 shutdown complete.
2022-03-20 09:18:20.909 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 09:18:20.909 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 09:18:20.912 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 09:18:24.159 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 12684 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 09:18:24.319 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 09:18:25.202 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 09:18:25.204 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 09:18:25.269 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
2022-03-20 09:18:25.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e40998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$db33553c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71a4e46b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:25.764 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$dd24e614] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$d5e99d68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c32c407a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$af6d5105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.301 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 09:18:26.309 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 09:18:26.478 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 09:18:26.478 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 09:18:26.478 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 09:18:26.478 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 09:18:26.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:26.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$cd3863fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7f852615] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$3a9c0c04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$61678332] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$af44018b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:18:27.704 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 09:18:27.715 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 09:18:27.719 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 09:18:27.719 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 09:18:27.724 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 09:18:27.838 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 09:18:27.838 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3475 ms
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 09:18:28.350 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 09:18:28.881 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 09:18:28.892 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 09:18:28.892 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 09:18:28.895 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 09:18:28.897 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 09:18:28.897 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647739108883'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 09:18:28.897 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 09:18:28.897 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 09:18:28.898 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@583030bd
2022-03-20 09:18:28.941 febs [main] INFO  p6spy - 2022-03-20 09:18:28 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 09:18:29.549 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 09:18:30.618 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 09:18:30.666 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 09:18:30.742 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 09:18:30.756 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 09:18:30.767 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 09:18:30.768 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 09:18:30.784 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 09:18:30.787 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.187 seconds (JVM running for 8.317)
2022-03-20 09:18:30.795 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 09:18:30.796 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 09:18:30.796 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 09:18:30.828 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 09:18:30.835 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:18:30.907 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 09:18:30.924 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 09:18:30.938 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 09:18:30.944 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:18:30.946 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 09:18:30.949 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 09:18:30.952 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 09:18:30.955 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:18:30.958 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 09:18:30.961 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 09:18:30.963 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 09:18:30.966 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:18:30.970 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 09:18:30.972 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 09:18:30.974 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 09:18:30.977 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:18:30.979 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 09:18:30.981 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 09:18:30.983 febs [main] INFO  p6spy - 2022-03-20 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 09:18:30.984 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 09:18:30.984 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 09:18:30.984 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 09:18:30.984 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 09:18:30.984 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T09:18:30.984
2022-03-20 09:18:31.275 febs [RMI TCP Connection(1)-192.168.42.78] INFO  p6spy - 2022-03-20 09:18:31 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 09:18:31.585 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 09:18:31.585 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 09:18:31.596 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-20 09:18:31.744 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 09:18:31.761 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739108883 started.
2022-03-20 09:18:46.765 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647739108883_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 09:18:46.765 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647739108883_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647738411747"'s failed in-progress jobs.
2022-03-20 09:22:40.863 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:22:40.937 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 09:22:40 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:22:40.941 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 09:22:40 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:23:01.170 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:23:01.177 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 09:23:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:23:01.178 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 09:23:01 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:23:45.634 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:23:45.646 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:23:45 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:23:45.647 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:23:45 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:24:14.193 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:24:14.219 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 09:24:14 | 耗时 18 ms | SQL 语句：
UPDATE owner_info SET name='孙笑川', phone='15010000000', id_number='142702000008277888' WHERE ID=2;
2022-03-20 09:24:14.257 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:24:14.263 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 09:24:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:24:14.265 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 09:24:14 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:25:14.071 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739108883 paused.
2022-03-20 09:25:14.072 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 09:25:14.079 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 09:25:14.079 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 09:25:14.079 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739108883 shutting down.
2022-03-20 09:25:14.079 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739108883 paused.
2022-03-20 09:25:14.081 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739108883 shutdown complete.
2022-03-20 09:25:14.087 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 09:25:14.087 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 09:25:14.090 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 09:25:18.587 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 2124 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 09:25:18.590 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 09:25:19.440 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 09:25:19.441 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 09:25:19.496 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
2022-03-20 09:25:19.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$a4c0cd78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.863 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7f10191c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1581a84b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:19.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8101a9f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$79c66148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$6709045a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$534a14e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.434 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 09:25:20.441 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 09:25:20.601 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 09:25:20.601 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 09:25:20.601 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 09:25:20.601 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 09:25:20.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:20.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$711527dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$2361e9f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$de78cfe4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$5444712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$5320c56b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.395 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 09:25:21.714 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 09:25:21.722 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 09:25:21.726 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 09:25:21.726 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 09:25:21.731 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 09:25:21.837 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 09:25:21.837 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3173 ms
2022-03-20 09:25:22.336 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 09:25:22.337 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 09:25:22.817 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 09:25:22.825 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 09:25:22.825 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 09:25:22.828 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 09:25:22.829 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 09:25:22.830 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647739522818'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 09:25:22.830 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 09:25:22.830 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 09:25:22.831 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4b76251c
2022-03-20 09:25:22.885 febs [main] INFO  p6spy - 2022-03-20 09:25:22 | 耗时 13 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 09:25:23.495 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 09:25:24.520 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 09:25:24.570 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 09:25:24.640 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 09:25:24.652 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 09:25:24.664 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 09:25:24.665 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 09:25:24.679 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 09:25:24.681 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.586 seconds (JVM running for 7.424)
2022-03-20 09:25:24.689 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 09:25:24.690 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 09:25:24.690 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 09:25:24.741 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 16 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 09:25:24.748 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:25:24.804 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 09:25:24.820 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 09:25:24.837 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 09:25:24.841 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:25:24.844 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 09:25:24.846 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 09:25:24.850 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 09:25:24.852 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:25:24.854 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 09:25:24.857 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 09:25:24.859 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 09:25:24.861 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:25:24.865 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 09:25:24.867 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 09:25:24.868 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 09:25:24.871 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 09:25:24.873 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 09:25:24.875 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 09:25:24.877 febs [main] INFO  p6spy - 2022-03-20 09:25:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 09:25:24.878 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 09:25:24.878 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 09:25:24.878 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 09:25:24.878 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 09:25:24.878 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T09:25:24.878
2022-03-20 09:25:25.464 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 09:25:25.464 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 09:25:25.465 febs [RMI TCP Connection(2)-192.168.42.78] INFO  p6spy - 2022-03-20 09:25:25 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 09:25:25.478 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-20 09:25:25.646 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 09:25:25.656 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 09:25:25.656 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647739108883"'s failed in-progress jobs.
2022-03-20 09:25:25.669 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739522818 started.
2022-03-20 09:25:59.934 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:26:00.024 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:26:00 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:26:00.029 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 09:26:00 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:26:48.302 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:26:48.313 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 09:26:48 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:26:48.315 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 09:26:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:29:15.205 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 09:29:15.214 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:29:15 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 09:29:15.215 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 09:29:15 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 09:29:19.559 febs [http-nio-9527-exec-8] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:03:13.678 febs [http-nio-9527-exec-2] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:04:13.630 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 10:04:13.721 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 10:04:13.744 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 24 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T10:04:13.695+0800' WHERE username = 'admin';
2022-03-20 10:04:13.748 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:04:13.758 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 12 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T10:04:13.725+0800' WHERE username = 'admin';
2022-03-20 10:04:13.760 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:04:13.773 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T10:04:13.762+0800', '', '127.0.0.1' );
2022-03-20 10:04:13.774 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 4 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T10:04:13.762+0800', '', '127.0.0.1' );
2022-03-20 10:04:13.850 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:04:13.866 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 10:04:13.912 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:04:13.915 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:04:13 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 10:04:14.199 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:04:14.203 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:04:14.430 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 224 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 10:04:14.431 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:04:14.433 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:04:14.435 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 10:04:14.437 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 231 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 10:04:14.438 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 10:04:14.448 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 10 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 10:04:14.453 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 10:04:14.458 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 10:04:14.462 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 10:04:14.464 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:04:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 10:04:17.634 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:04:17.639 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:04:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:04:17.640 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:04:17 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:04:22.570 febs [http-nio-9527-exec-7] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:06:39.487 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:06:39.500 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:06:39 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:06:39.501 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:06:39 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:07:16.197 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:07:16.201 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:07:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:07:16.203 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:07:16 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:07:27.389 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:07:27.395 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:07:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:07:27.396 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:07:27 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:07:42.426 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:07:42.439 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:07:42 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:07:42.441 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:07:42 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:18:54.515 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739522818 paused.
2022-03-20 10:18:54.516 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:18:54.521 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:18:54.521 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:18:54.521 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739522818 shutting down.
2022-03-20 10:18:54.521 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739522818 paused.
2022-03-20 10:18:54.523 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647739522818 shutdown complete.
2022-03-20 10:18:54.526 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:18:54.526 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:18:54.530 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:19:00.139 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 1892 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:19:00.143 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:19:01.051 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:19:01.053 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:19:01.111 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46ms. Found 0 repository interfaces.
2022-03-20 10:19:01.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$3e8ddf10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$18dd2ab4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.605 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af4eb9e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$1acebb8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:01.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$139372e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.018 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d615f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ed17267d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.136 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:19:02.143 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:19:02.305 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:19:02.305 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:19:02.305 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:19:02.305 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:19:02.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.937 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:02.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.063 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$ae23974] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$bd2efb8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$7845e17c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9f1158aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ecedd703] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:19:03.470 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:19:03.479 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:19:03.484 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:19:03.484 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:19:03.488 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:19:03.602 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:19:03.602 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3414 ms
2022-03-20 10:19:04.119 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:19:04.119 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:19:04.120 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:19:04.616 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:19:04.625 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:19:04.626 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:19:04.629 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:19:04.630 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:19:04.631 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647742744617'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:19:04.631 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:19:04.631 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:19:04.632 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5030997b
2022-03-20 10:19:04.676 febs [main] INFO  p6spy - 2022-03-20 10:19:04 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:19:05.263 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:19:06.398 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:19:06.458 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:19:06.533 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:19:06.546 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:19:06.557 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:19:06.559 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:19:06.573 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:19:06.575 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.965 seconds (JVM running for 7.822)
2022-03-20 10:19:06.585 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:19:06.586 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:19:06.586 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:19:06.643 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 28 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:19:06.650 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:19:06.721 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:19:06.736 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:19:06.750 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:19:06.754 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:19:06.757 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:19:06.760 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:19:06.764 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:19:06.767 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:19:06.770 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:19:06.773 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:19:06.776 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:19:06.779 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:19:06.783 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:19:06.786 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:19:06.787 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:19:06.789 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:19:06.792 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:19:06.795 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:19:06.797 febs [main] INFO  p6spy - 2022-03-20 10:19:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:19:06.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:19:06.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:19:06.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:19:06.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:19:06.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:19:06.799
2022-03-20 10:19:07.311 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:19:07.311 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:19:07.322 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-20 10:19:07.537 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:19:07.573 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:19:07.573 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647739522818"'s failed in-progress jobs.
2022-03-20 10:19:07.595 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742744617 started.
2022-03-20 10:19:07.633 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-20 10:19:07 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:19:24.474 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:19:24.557 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:19:24 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:19:24.563 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:19:24 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:20:12.951 febs [http-nio-9527-exec-5] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:20:15.939 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:20:15 | 耗时 8 ms | SQL 语句：
UPDATE owner_info SET images='SA1647742815838.png' WHERE ID = 2;
2022-03-20 10:21:44.245 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742744617 paused.
2022-03-20 10:21:44.246 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:21:44.255 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:21:44.257 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:21:44.257 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742744617 shutting down.
2022-03-20 10:21:44.257 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742744617 paused.
2022-03-20 10:21:44.258 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742744617 shutdown complete.
2022-03-20 10:21:44.261 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:21:44.261 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:21:44.264 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:21:49.287 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 10740 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:21:49.290 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:21:50.222 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:21:50.224 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:21:50.271 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2022-03-20 10:21:50.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2201b156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fc50fcfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92c28c29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:50.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$fe428dd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f7074526] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$e449e838] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d08af8c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.262 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:21:51.269 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:21:51.430 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:21:51.430 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:21:51.430 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:21:51.430 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:21:51.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:51.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.029 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.100 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.223 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$ee560bba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$a0a2cdd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$5bb9b3c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$82852af0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.248 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$d061a949] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.259 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:21:52.586 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:21:52.596 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:21:52.601 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:21:52.601 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:21:52.606 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:21:52.724 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:21:52.724 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3337 ms
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:21:53.261 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:21:53.262 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:21:53.757 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:21:53.768 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:21:53.768 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:21:53.770 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:21:53.772 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:21:53.773 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647742913758'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:21:53.773 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:21:53.773 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:21:53.774 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@511bfbb0
2022-03-20 10:21:53.843 febs [main] INFO  p6spy - 2022-03-20 10:21:53 | 耗时 28 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:21:54.466 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:21:55.677 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:21:55.730 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:21:55.805 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:21:55.818 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:21:55.829 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:21:55.830 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:21:55.844 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:21:55.847 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.073 seconds (JVM running for 7.949)
2022-03-20 10:21:55.857 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:21:55.858 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:21:55.858 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:21:55.885 febs [main] INFO  p6spy - 2022-03-20 10:21:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:21:55.893 febs [main] INFO  p6spy - 2022-03-20 10:21:55 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:21:55.954 febs [main] INFO  p6spy - 2022-03-20 10:21:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:21:55.994 febs [main] INFO  p6spy - 2022-03-20 10:21:55 | 耗时 30 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:21:56.007 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:21:56.011 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:21:56.014 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:21:56.017 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:21:56.021 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:21:56.023 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:21:56.025 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:21:56.028 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:21:56.031 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:21:56.034 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:21:56.037 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:21:56.040 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:21:56.041 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:21:56.044 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:21:56.047 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:21:56.049 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:21:56.051 febs [main] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:21:56.052 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:21:56.052 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:21:56.052 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:21:56.052 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:21:56.052 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:21:56.052
2022-03-20 10:21:56.479 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:21:56.479 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:21:56.490 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-20 10:21:56.806 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 10:21:56 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:21:56.815 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:21:56.833 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742913758 started.
2022-03-20 10:22:04.613 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:22:04.721 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:22:04 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:22:04.725 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:22:04 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:22:11.884 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647742913758_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:22:11.884 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647742913758_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647742744617"'s failed in-progress jobs.
2022-03-20 10:22:23.220 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:22:23.230 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:22:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:22:23.233 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:22:23 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:22:30.857 febs [http-nio-9527-exec-6] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:23:06.960 febs [http-nio-9527-exec-8] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:23:07.761 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:23:07 | 耗时 38 ms | SQL 语句：
UPDATE owner_info SET images='SA1647742987696.jpg' WHERE ID = 2;
2022-03-20 10:23:42.914 febs [http-nio-9527-exec-10] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:23:46.404 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:23:46 | 耗时 50 ms | SQL 语句：
UPDATE owner_info SET images='SA1647743026347.png' WHERE ID = 2;
2022-03-20 10:24:36.954 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742913758 paused.
2022-03-20 10:24:36.955 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:24:36.963 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:24:36.963 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:24:36.964 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742913758 shutting down.
2022-03-20 10:24:36.964 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742913758 paused.
2022-03-20 10:24:36.968 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647742913758 shutdown complete.
2022-03-20 10:24:36.973 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:24:36.973 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:24:36.976 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:24:42.135 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 1008 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:24:42.139 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:24:43.111 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:24:43.113 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:24:43.171 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2022-03-20 10:24:43.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$fe4ce9f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d89c359a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f0dc4c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:43.706 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$da8dc672] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$d3527dc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c09520d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.231 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$acd63163] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.243 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:24:44.250 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:24:44.423 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:24:44.423 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:24:44.423 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:24:44.423 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:24:44.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:44.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.099 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.221 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.245 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.248 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$caa1445a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7cee0673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$3804ec62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$5ed06390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$acace1e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:24:45.684 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:24:45.696 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:24:45.700 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:24:45.700 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:24:45.705 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:24:45.824 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:24:45.825 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3554 ms
2022-03-20 10:24:46.359 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:24:46.360 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:24:46.862 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:24:46.872 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:24:46.872 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:24:46.875 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:24:46.876 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:24:46.877 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647743086863'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:24:46.877 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:24:46.877 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:24:46.878 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@155c7eae
2022-03-20 10:24:46.959 febs [main] INFO  p6spy - 2022-03-20 10:24:46 | 耗时 40 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:24:47.519 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:24:48.658 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:24:48.709 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:24:48.783 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:24:48.796 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:24:48.807 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:24:48.808 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:24:48.822 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:24:48.824 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.264 seconds (JVM running for 8.162)
2022-03-20 10:24:48.833 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:24:48.834 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:24:48.834 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:24:48.864 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:24:48.871 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:24:48.946 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:24:48.974 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 20 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:24:48.989 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:24:48.993 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:24:48.996 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:24:48.999 febs [main] INFO  p6spy - 2022-03-20 10:24:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:24:49.002 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:24:49.004 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:24:49.007 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:24:49.009 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:24:49.012 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:24:49.014 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:24:49.018 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:24:49.020 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:24:49.022 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:24:49.024 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:24:49.027 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:24:49.030 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:24:49.032 febs [main] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:24:49.032 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:24:49.032 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:24:49.033 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:24:49.033 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:24:49.033 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:24:49.033
2022-03-20 10:24:49.573 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:24:49.573 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:24:49.587 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2022-03-20 10:24:49.800 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:24:49.833 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:24:49.833 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647742913758"'s failed in-progress jobs.
2022-03-20 10:24:49.903 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647743086863 started.
2022-03-20 10:24:49.936 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 10:24:49 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:24:59.691 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:24:59.783 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:24:59 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:24:59.788 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:24:59 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:25:08.222 febs [http-nio-9527-exec-4] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:27:01.387 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:27:01.401 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:27:01 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:27:01.403 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:27:01 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:27:12.827 febs [http-nio-9527-exec-9] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:30:03.182 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:30:03.191 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:30:03 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:30:03.193 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:30:03 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:30:20.830 febs [http-nio-9527-exec-4] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:30:56.535 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:30:56.542 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:30:56 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:30:56.544 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:30:56 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:34:23.257 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:34:23.269 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:34:23 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:34:23.270 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:34:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:34:35.781 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:34:35.785 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:34:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:34:35.787 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:34:35 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:34:39.125 febs [http-nio-9527-exec-2] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:35:21.581 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:35:21.585 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:35:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:35:21.587 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:35:21 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:36:59.203 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:36:59.212 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:36:59 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:36:59.213 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:36:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:37:23.009 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:37:23.014 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:37:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:37:23.016 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:37:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:37:32.657 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:37:32.661 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:37:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:37:32.662 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:37:32 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:37:52.693 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:37:52.700 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:37:52 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:37:52.702 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:37:52 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:37:54.675 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:37:54.683 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:37:54 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 10:39:49.457 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:39:49.459 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:39:49 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 10:39:52.129 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:39:52.138 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:39:52 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:39:52.140 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:39:52 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:39:59.360 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:39:59.365 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:39:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:39:59.367 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:39:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:39:59.581 febs [http-nio-9527-exec-2] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:40:06.168 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:40:06.172 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:40:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:40:06.174 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:40:06 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:40:07.636 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:40:07.639 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:40:07 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 10:41:23.212 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:41:23.216 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:41:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:41:23.217 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:41:23 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:41:25.236 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:41:25.242 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:41:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:41:25.243 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:41:25 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:41:31.430 febs [http-nio-9527-exec-6] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:41:58.278 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:41:58.300 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:41:58 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:41:58.301 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:41:58 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:42:02.826 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:42:02.830 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:42:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:42:02.831 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:42:02 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:42:09.347 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:42:29.953 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:42:29.959 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:42:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:42:29.960 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:42:29 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:42:35.051 febs [http-nio-9527-exec-2] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:42:49.430 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:42:49.433 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:42:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:42:49.435 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:42:49 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:43:14.998 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:43:15.002 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:43:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:43:15.004 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:43:15 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:43:18.285 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:44:14.748 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:44:14.754 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:44:14 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:44:14.756 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:44:14 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:44:55.261 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:44:55.265 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:44:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:44:55.266 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:44:55 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:45:17.107 febs [http-nio-9527-exec-7] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:46:05.408 febs [http-nio-9527-exec-9] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:46:43.577 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:47:26.759 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:47:26.771 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:47:26 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:47:26.772 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:47:26 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:47:38.819 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:47:38.823 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:47:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:47:38.824 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:47:38 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:47:54.922 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:47:54.926 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:47:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:47:54.927 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:47:54 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:48:27.766 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:48:27.770 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:48:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:48:27.771 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:48:27 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:49:03.011 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:49:22.527 febs [http-nio-9527-exec-4] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:49:48.461 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647743086863 paused.
2022-03-20 10:49:48.461 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:49:48.468 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:49:48.468 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:49:48.468 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647743086863 shutting down.
2022-03-20 10:49:48.468 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647743086863 paused.
2022-03-20 10:49:48.471 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647743086863 shutdown complete.
2022-03-20 10:49:48.474 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:49:48.474 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:49:48.479 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:49:53.713 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 4540 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:49:53.716 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:49:54.613 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:49:54.624 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:49:54.678 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
2022-03-20 10:49:54.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2392235b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fde16eff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9452fe2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ffd2ffd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f897b72b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$e5da5a3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d21b6ac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.659 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:49:55.666 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:49:55.826 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:49:55.826 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:49:55.826 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:49:55.826 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:49:55.827 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:55.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.534 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.557 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$efe67dbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$a2333fd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$5d4a25c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$84159cf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$d1f21b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.666 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:49:56.993 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:49:57.002 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:49:57.006 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:49:57.006 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:49:57.010 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:49:57.129 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:49:57.129 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3359 ms
2022-03-20 10:49:57.624 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:49:57.624 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:49:57.624 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:49:57.625 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:49:57.625 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:49:57.625 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:49:57.625 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:49:57.625 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:49:58.118 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:49:58.128 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:49:58.128 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:49:58.131 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:49:58.132 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:49:58.133 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647744598119'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:49:58.133 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:49:58.133 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:49:58.134 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3093b9ff
2022-03-20 10:49:58.187 febs [main] INFO  p6spy - 2022-03-20 10:49:58 | 耗时 13 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:49:58.770 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:49:59.845 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:49:59.897 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:49:59.970 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:49:59.983 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:49:59.994 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:49:59.995 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:50:00.009 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:50:00.011 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.878 seconds (JVM running for 7.845)
2022-03-20 10:50:00.021 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:50:00.021 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:50:00.021 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:50:00.054 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:50:00.060 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:50:00.122 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:50:00.138 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:50:00.152 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:50:00.156 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:50:00.158 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:50:00.161 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:50:00.165 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:50:00.167 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:50:00.168 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:50:00.170 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:50:00.173 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:50:00.176 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:50:00.179 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:50:00.181 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:50:00.183 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:50:00.185 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:50:00.187 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:50:00.190 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:50:00.191 febs [main] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:50:00.192 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:50:00.192 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:50:00.192 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:50:00.192 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:50:00.192 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:50:00.192
2022-03-20 10:50:00.620 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:50:00.620 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:50:00.632 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-20 10:50:00.930 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 10:50:00 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:50:00.986 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:50:01.003 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:50:01.003 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647743086863"'s failed in-progress jobs.
2022-03-20 10:50:01.013 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647744598119 started.
2022-03-20 10:50:48.123 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:50:48.221 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:50:48 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:50:48.226 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:50:48 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:50:53.531 febs [http-nio-9527-exec-4] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 10:50:54.769 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:50:54 | 耗时 9 ms | SQL 语句：
UPDATE owner_info SET images='SA1647744654734.jpg' WHERE ID = 2;
2022-03-20 10:50:54.806 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:50:54.813 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:50:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 10:50:54.815 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:50:54 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 10:50:57.150 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:50:57.158 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:50:57 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 10:51:11.684 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:11.685 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:11.686 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:11.687 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:51:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2022-03-20 10:51:11.694 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:51:11 | 耗时 4 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2022-03-20 10:51:11.695 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:11.701 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:51:11 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 10:51:11.706 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:51:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2022-03-20 10:51:11.708 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:51:11 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2022-03-20 10:51:13.332 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:13.332 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:13.332 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:13.335 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:51:13 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2022-03-20 10:51:13.336 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:51:13 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2022-03-20 10:51:13.350 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:51:13 | 耗时 13 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 10:51:19.574 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:19.575 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:19.575 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:19.579 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:51:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2022-03-20 10:51:19.579 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:51:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2022-03-20 10:51:19.580 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:51:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 10:51:59.389 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:59.447 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:51:59 | 耗时 7 ms | SQL 语句：
INSERT INTO houses_info ( address, building_id, number, floor, usage_area, surface_area, nature, rooms, buyer, staff_id, owner_id, create_date ) VALUES ( '北京市朝阳区小红门鸿博家园一期A区23栋三单元801室', 1, '801', 8, 106.5, 123.2, 1, 3, '孙笑川', 3, 2, '2022-03-20 10:51:59' );
2022-03-20 10:51:59.480 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:51:59.487 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:51:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2022-03-20 10:51:59.488 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:51:59 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2022-03-20 10:52:21.986 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 10:52:22.008 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T10:52:21.993+0800' WHERE username = 'fank';
2022-03-20 10:52:22.012 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:52:22.034 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T10:52:22.025+0800', '', '127.0.0.1' );
2022-03-20 10:52:22.093 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:52:22.106 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 10:52:22.299 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:52:22.301 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:52:22.306 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 10:52:22.310 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 10:52:22.316 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 4 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 10:52:22.322 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 10:52:22.325 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 10:52:22.345 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 41 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 10:52:22.347 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:52:22.349 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:52:22.352 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 10:52:22.354 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:52:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 10:52:36.126 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:52:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 10:52:36.135 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:52:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 10:56:01.286 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 10:56:01.300 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T10:56:01.288+0800' WHERE username = 'admin';
2022-03-20 10:56:01.303 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:56:01.317 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 4 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T10:56:01.311+0800', '', '127.0.0.1' );
2022-03-20 10:56:01.338 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:01.344 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 10:56:01.639 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:01.639 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:01.642 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 10:56:01.644 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:56:01.646 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 10:56:01.648 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 10:56:01.650 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 10:56:01.660 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 18 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 10:56:01.678 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 16 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 10:56:01.682 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 10:56:01.684 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 10:56:01.688 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 10:56:01.690 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:56:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 10:56:05.225 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:05.225 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:05.235 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:56:05 | 耗时 4 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 10:56:05.240 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:56:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 10:56:05.242 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:56:05 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 LIMIT 0,10;
2022-03-20 10:56:06.557 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:06.561 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:56:06 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 10:56:06.563 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:06.567 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 10:56:06 | 耗时 0 ms | SQL 语句：
SELECT ID,address,building_id,number,floor,usage_area,surface_area,nature,rooms,buyer,staff_id,owner_id,create_date FROM houses_info;
2022-03-20 10:56:10.884 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:10.905 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 10:56:10 | 耗时 17 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 3 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( DATE_SUB( now(), INTERVAL 1 MONTH ), '%Y-%m');
2022-03-20 10:56:35.695 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:35.704 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 10:56:35 | 耗时 6 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 1 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( now(), '%Y-%m');
2022-03-20 10:56:51.158 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:56:51.162 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:56:51 | 耗时 0 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 1 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( now(), '%Y-%m');
2022-03-20 10:57:03.380 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:57:03.383 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 10:57:03 | 耗时 0 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 1 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( now(), '%Y-%m');
2022-03-20 10:57:43.207 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647744598119 paused.
2022-03-20 10:57:43.207 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:57:43.215 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:57:43.217 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:57:43.217 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647744598119 shutting down.
2022-03-20 10:57:43.217 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647744598119 paused.
2022-03-20 10:57:43.217 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647744598119 shutdown complete.
2022-03-20 10:57:43.222 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:57:43.222 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:57:43.227 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:57:49.011 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 6296 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:57:49.013 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:57:50.047 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:57:50.048 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:57:50.110 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2022-03-20 10:57:50.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$558d94e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.588 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2fdce08d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c64e6fbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$31ce7165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:50.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2a9328b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$17d5cbcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$416dc56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.141 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:57:51.150 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:57:51.313 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:57:51.313 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:57:51.313 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:57:51.313 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:57:51.313 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.924 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:51.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.035 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$21e1ef4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d42eb166] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8f459755] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b6110e83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3ed8cdc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:57:52.525 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:57:52.536 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:57:52.540 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:57:52.540 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:57:52.546 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:57:52.663 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:57:52.663 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3580 ms
2022-03-20 10:57:53.197 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:57:53.198 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:57:53.757 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:57:53.768 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:57:53.768 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:57:53.771 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:57:53.772 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:57:53.773 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647745073758'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:57:53.773 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:57:53.773 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:57:53.774 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@75063bd0
2022-03-20 10:57:53.858 febs [main] INFO  p6spy - 2022-03-20 10:57:53 | 耗时 37 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:57:54.453 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:57:55.601 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:57:55.656 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:57:55.734 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:57:55.747 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:57:55.757 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:57:55.759 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:57:55.773 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:57:55.775 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.35 seconds (JVM running for 8.41)
2022-03-20 10:57:55.785 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:57:55.785 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:57:55.785 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:57:55.819 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:57:55.825 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:57:55.886 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:57:55.898 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:57:55.911 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:57:55.915 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:57:55.918 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:57:55.920 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:57:55.923 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:57:55.925 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:57:55.928 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:57:55.930 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:57:55.932 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:57:55.934 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:57:55.937 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:57:55.939 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:57:55.940 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:57:55.943 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:57:55.945 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:57:55.948 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:57:55.950 febs [main] INFO  p6spy - 2022-03-20 10:57:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:57:55.950 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:57:55.950 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:57:55.950 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:57:55.950 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:57:55.951 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:57:55.951
2022-03-20 10:57:56.276 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:57:56.276 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:57:56.288 febs [RMI TCP Connection(1)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-20 10:57:56.607 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 10:57:56 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:57:56.744 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:57:56.756 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:57:56.756 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647744598119"'s failed in-progress jobs.
2022-03-20 10:57:56.766 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745073758 started.
2022-03-20 10:58:10.051 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:10.087 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 10:58:10 | 耗时 3 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 3 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( now(), '%Y-%m');
2022-03-20 10:58:10.118 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:10.212 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:10.297 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:10.365 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:58:10 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 10:58:10.370 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 LIMIT 0,10;
2022-03-20 10:58:12.121 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:12.129 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:58:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 10:58:12.131 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 10:58:12 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 LIMIT 10,10;
2022-03-20 10:58:14.260 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 10:58:14.266 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:58:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 10:58:14.268 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 10:58:14 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 LIMIT 0,10;
2022-03-20 10:59:26.891 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745073758 paused.
2022-03-20 10:59:26.892 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 10:59:26.899 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 10:59:26.900 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 10:59:26.900 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745073758 shutting down.
2022-03-20 10:59:26.901 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745073758 paused.
2022-03-20 10:59:26.903 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745073758 shutdown complete.
2022-03-20 10:59:26.911 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 10:59:26.911 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 10:59:26.915 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 10:59:32.995 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 7416 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 10:59:32.998 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 10:59:33.936 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 10:59:33.938 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 10:59:34.000 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2022-03-20 10:59:34.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$de536bb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b8a2b755] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.839 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f144684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:34.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ba94482d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b358ff81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a09ba293] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8cdcb31e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.431 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 10:59:35.437 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 10:59:35.606 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 10:59:35.606 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 10:59:35.606 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 10:59:35.607 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 10:59:35.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:35.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.361 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$aaa7c615] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$5cf4882e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$180b6e1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$3ed6e54b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$8cb363a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 10:59:36.776 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 10:59:36.787 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 10:59:36.791 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 10:59:36.791 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 10:59:36.797 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 10:59:36.906 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 10:59:36.906 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3841 ms
2022-03-20 10:59:37.424 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 10:59:37.424 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 10:59:37.424 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 10:59:37.425 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 10:59:37.425 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 10:59:37.425 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 10:59:37.425 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 10:59:37.425 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 10:59:37.976 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 10:59:37.988 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 10:59:37.989 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 10:59:37.993 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 10:59:37.994 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 10:59:37.995 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647745177978'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 10:59:37.995 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 10:59:37.996 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 10:59:37.997 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@320fc4b0
2022-03-20 10:59:38.048 febs [main] INFO  p6spy - 2022-03-20 10:59:38 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 10:59:38.655 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 10:59:39.807 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 10:59:39.860 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 10:59:39.936 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 10:59:39.950 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 10:59:39.962 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 10:59:39.962 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 10:59:39.976 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 10:59:39.979 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.566 seconds (JVM running for 8.449)
2022-03-20 10:59:39.989 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 10:59:39.990 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 10:59:39.990 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 10:59:40.042 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 25 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 10:59:40.050 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:59:40.112 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 10:59:40.130 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 9 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 10:59:40.144 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 10:59:40.148 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:59:40.150 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 10:59:40.153 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 10:59:40.156 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 10:59:40.158 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:59:40.160 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 10:59:40.163 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 10:59:40.166 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 10:59:40.169 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:59:40.172 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 10:59:40.175 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 10:59:40.176 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 10:59:40.178 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 10:59:40.181 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 10:59:40.184 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 10:59:40.185 febs [main] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 10:59:40.186 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 10:59:40.186 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 10:59:40.186 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 10:59:40.186 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 10:59:40.187 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T10:59:40.186
2022-03-20 10:59:40.456 febs [RMI TCP Connection(3)-192.168.42.78] INFO  p6spy - 2022-03-20 10:59:40 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 10:59:40.887 febs [RMI TCP Connection(5)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 10:59:40.887 febs [RMI TCP Connection(5)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 10:59:40.899 febs [RMI TCP Connection(5)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2022-03-20 10:59:40.951 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 10:59:40.966 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745177978 started.
2022-03-20 10:59:44.158 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 10:59:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 10:59:44.193 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 10:59:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 10:59:55.971 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647745177978_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 10:59:55.971 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647745177978_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647745073758"'s failed in-progress jobs.
2022-03-20 11:00:42.815 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:00:42 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:00:42.822 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 11:00:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:03:32.600 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:03:32 | 耗时 17 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:03:32.607 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 11:03:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:04:41.707 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 11:04:41 | 耗时 14 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:04:41.714 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 11:04:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:05:31.169 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:05:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:05:31.177 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 11:05:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:06:13.906 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:06:13 | 耗时 19 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:06:13.920 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 11:06:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:06:25.905 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 11:06:25 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:06:25.911 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 11:06:25 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:12:39.941 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:12:39 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:12:39.948 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 11:12:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:13:45.598 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:13:45 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:13:45.611 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 11:13:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:13:56.577 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:13:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:13:56.584 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:13:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:14:44.481 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 11:14:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:14:44.487 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 11:14:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:23.587 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:15:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:23.602 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 11:15:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:27.914 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 11:15:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:27.920 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:15:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:52.684 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 11:15:52 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:15:52.690 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 11:15:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:16:39.103 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 11:16:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:16:39.109 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 11:16:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:18:38.991 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 11:18:38 | 耗时 34 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:18:38.997 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 11:18:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:22:16.489 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:22:16 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:22:16.496 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:22:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:25:31.118 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:25:31 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:25:31.126 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 11:25:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:25:52.906 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:25:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:25:52.912 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:25:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:34:14.355 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:34:14 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:34:14.361 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 11:34:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:34:48.811 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:34:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:34:48.817 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:34:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:35:26.732 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 11:35:26 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:35:26.738 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 11:35:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:37:57.592 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 11:37:57 | 耗时 28 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:37:57.598 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 11:37:57 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:40:42.058 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 11:40:42 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:40:42.064 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 11:40:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 11:59:39.959 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 12:59:39.948 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 13:29:07.161 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:29:07 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:29:07.167 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:29:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:30:48.195 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 13:30:48 | 耗时 16 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:30:48.203 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:30:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:30:52.645 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:30:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:30:52.651 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:30:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:35:05.874 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:35:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:35:05.900 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:35:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:36:13.838 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745177978 paused.
2022-03-20 13:36:13.838 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 13:36:13.844 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 13:36:13.844 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 13:36:13.844 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745177978 shutting down.
2022-03-20 13:36:13.844 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745177978 paused.
2022-03-20 13:36:13.845 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647745177978 shutdown complete.
2022-03-20 13:36:13.851 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 13:36:13.851 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 13:36:13.857 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 13:36:19.283 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 8696 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 13:36:19.315 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 13:36:20.203 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 13:36:20.205 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 13:36:20.268 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2022-03-20 13:36:20.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$cdf0c6fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.667 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a84012a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.764 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3eb1a1d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:20.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$aa31a37a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a2f65ace] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$9038fde0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7c7a0e6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.273 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 13:36:21.280 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 13:36:21.566 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 13:36:21.566 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 13:36:21.566 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 13:36:21.566 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 13:36:21.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:21.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9a452162] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4c91e37b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$7a8c96a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.519 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$2e744098] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7c50bef1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.541 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.567 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:36:22.889 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 13:36:22.898 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 13:36:22.902 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 13:36:22.903 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 13:36:22.907 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 13:36:23.066 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 13:36:23.066 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3713 ms
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 13:36:23.669 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 13:36:24.219 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 13:36:24.231 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 13:36:24.231 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 13:36:24.234 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 13:36:24.236 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 13:36:24.236 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647754584220'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 13:36:24.236 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 13:36:24.236 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 13:36:24.238 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1760e688
2022-03-20 13:36:24.288 febs [main] INFO  p6spy - 2022-03-20 13:36:24 | 耗时 4 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 13:36:24.874 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 13:36:26.055 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 13:36:26.114 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 13:36:26.188 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 13:36:26.202 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 13:36:26.212 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 13:36:26.213 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 13:36:26.225 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 13:36:26.228 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.428 seconds (JVM running for 8.24)
2022-03-20 13:36:26.236 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 13:36:26.236 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 13:36:26.236 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 13:36:26.261 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 13:36:26.273 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:36:26.331 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 13:36:26.353 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 10 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 13:36:26.367 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 13:36:26.371 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:36:26.373 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 13:36:26.376 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 13:36:26.378 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 13:36:26.381 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:36:26.383 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 13:36:26.387 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 13:36:26.389 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 13:36:26.392 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:36:26.396 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 13:36:26.398 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 13:36:26.400 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 13:36:26.402 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:36:26.404 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 13:36:26.406 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 13:36:26.407 febs [main] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 13:36:26.408 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 13:36:26.408 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 13:36:26.408 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 13:36:26.408 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 13:36:26.408 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T13:36:26.408
2022-03-20 13:36:26.637 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 13:36:26.637 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 13:36:26.648 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-20 13:36:26.945 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-20 13:36:26 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 13:36:27.195 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 13:36:27.229 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647754584220 started.
2022-03-20 13:36:42.236 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647754584220_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 13:36:42.236 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647754584220_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647745177978"'s failed in-progress jobs.
2022-03-20 13:37:31.615 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:37:31 | 耗时 203 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:37:31.649 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:37:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:37:42.334 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:37:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:37:42.342 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:37:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:38:48.871 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:38:48 | 耗时 22 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:38:48.878 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:38:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:39:24.465 febs [http-nio-9527-exec-5] INFO  o.a.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:467)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:294)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-03-20 13:40:25.532 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:40:25 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:40:25.539 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 13:40:25 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:43:31.550 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:43:31 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:43:31.558 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:43:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:44:53.887 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:44:53 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:44:53.895 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 13:44:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:44:59.438 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:44:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:44:59.446 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:44:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:45:42.461 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647754584220 paused.
2022-03-20 13:45:42.462 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 13:45:42.471 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 13:45:42.471 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 13:45:42.471 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647754584220 shutting down.
2022-03-20 13:45:42.471 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647754584220 paused.
2022-03-20 13:45:42.472 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647754584220 shutdown complete.
2022-03-20 13:45:42.475 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 13:45:42.475 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 13:45:42.479 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 13:45:48.214 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 13796 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 13:45:48.217 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 13:45:49.101 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 13:45:49.103 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 13:45:49.162 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2022-03-20 13:45:49.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f8414c87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d290982b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6902275a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:49.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d4822903] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cd46e057] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ba898369] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a6ca93f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.178 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 13:45:50.185 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 13:45:50.356 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 13:45:50.356 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 13:45:50.356 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 13:45:50.356 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 13:45:50.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.374 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:50.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.134 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$c495a6eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$76e26904] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$31f94ef3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$58c4c621] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a6a1447a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.231 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:45:51.553 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 13:45:51.563 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 13:45:51.567 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 13:45:51.567 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 13:45:51.573 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 13:45:51.680 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 13:45:51.681 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3416 ms
2022-03-20 13:45:52.193 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 13:45:52.194 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 13:45:52.195 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 13:45:52.719 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 13:45:52.729 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 13:45:52.729 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 13:45:52.732 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 13:45:52.734 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 13:45:52.734 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647755152720'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 13:45:52.734 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 13:45:52.734 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 13:45:52.736 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1e6bd367
2022-03-20 13:45:52.782 febs [main] INFO  p6spy - 2022-03-20 13:45:52 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 13:45:53.333 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 13:45:54.477 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 13:45:54.529 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 13:45:54.605 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 13:45:54.618 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 13:45:54.629 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 13:45:54.631 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 13:45:54.646 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 13:45:54.648 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.997 seconds (JVM running for 7.837)
2022-03-20 13:45:54.656 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 13:45:54.657 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 13:45:54.657 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 13:45:54.684 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 13:45:54.695 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:45:54.753 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 13:45:54.769 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 13:45:54.783 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 13:45:54.789 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:45:54.791 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 13:45:54.793 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 13:45:54.797 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 13:45:54.799 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:45:54.802 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 13:45:54.804 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 13:45:54.807 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 13:45:54.809 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:45:54.813 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 13:45:54.816 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 13:45:54.817 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 13:45:54.820 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:45:54.822 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 13:45:54.825 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 13:45:54.826 febs [main] INFO  p6spy - 2022-03-20 13:45:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 13:45:54.827 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 13:45:54.827 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 13:45:54.827 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 13:45:54.827 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 13:45:54.827 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T13:45:54.827
2022-03-20 13:45:55.449 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 13:45:55.450 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 13:45:55.451 febs [RMI TCP Connection(2)-192.168.42.78] INFO  p6spy - 2022-03-20 13:45:55 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 13:45:55.461 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2022-03-20 13:45:55.618 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 13:45:55.637 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755152720 started.
2022-03-20 13:46:10.649 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647755152720_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 13:46:10.649 febs [QuartzScheduler_MyScheduler-WIN-ETS2DEK9JHC1647755152720_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647754584220"'s failed in-progress jobs.
2022-03-20 13:46:28.301 febs [http-nio-9527-exec-2] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 13:46:30.355 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 13:46:31.720 febs [http-nio-9527-exec-3] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 13:46:36.364 febs [http-nio-9527-exec-5] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 13:46:37.498 febs [http-nio-9527-exec-6] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 13:47:48.711 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 13:47:48 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:47:48.730 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 13:47:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:47:58.484 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:47:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:47:58.492 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 13:47:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:32.080 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:48:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:32.087 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:48:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:44.737 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:48:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:44.745 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:48:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:58.928 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:48:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:48:58.934 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:48:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:51:17.993 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:51:17 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:51:18.000 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:51:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:52:15.113 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:52:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:52:15.119 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:52:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:52:33.015 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:52:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird1';
2022-03-20 13:52:34.303 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 13:52:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird1';
2022-03-20 13:53:18.753 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:53:18 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird1';
2022-03-20 13:58:22.202 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755152720 paused.
2022-03-20 13:58:22.202 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 13:58:22.209 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 13:58:22.209 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 13:58:22.209 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755152720 shutting down.
2022-03-20 13:58:22.209 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755152720 paused.
2022-03-20 13:58:22.211 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755152720 shutdown complete.
2022-03-20 13:58:22.215 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 13:58:22.215 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 13:58:22.222 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2022-03-20 13:58:28.896 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-ETS2DEK9JHC with PID 2488 (started by Administrator in E:\Project\小区物业管理系统\backend)
2022-03-20 13:58:28.899 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2022-03-20 13:58:29.828 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-20 13:58:29.830 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2022-03-20 13:58:29.892 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2022-03-20 13:58:30.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f673a6e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d0c2f289] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$673481b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d2b48361] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cb793ab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.882 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.890 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b8bbddc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a4fcee52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.906 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:30.910 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2022-03-20 13:58:30.917 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2022-03-20 13:58:31.087 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2022-03-20 13:58:31.087 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2022-03-20 13:58:31.087 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2022-03-20 13:58:31.088 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2022-03-20 13:58:31.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.706 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.735 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.789 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.863 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.866 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$c2c80149] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7514c362] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$302ba951] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$56f7207f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a4d39ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:31.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-20 13:58:32.341 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2022-03-20 13:58:32.352 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2022-03-20 13:58:32.357 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2022-03-20 13:58:32.357 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2022-03-20 13:58:32.362 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\dotnet\;D:\办公软件\Git\cmd;D:\办公软件\Yarn\bin\;D:\办公软件\Xshell\;D:\办公软件\Xftp\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Local\Yarn\bin;D:\办公软件\Bandzip\;C:\Program Files\Azure Data Studio\bin;D:\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Roaming\npm;.]
2022-03-20 13:58:32.493 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-03-20 13:58:32.493 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3522 ms
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2022-03-20 13:58:33.037 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2022-03-20 13:58:33.038 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2022-03-20 13:58:33.038 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2022-03-20 13:58:33.557 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2022-03-20 13:58:33.568 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-03-20 13:58:33.568 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2022-03-20 13:58:33.571 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2022-03-20 13:58:33.572 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2022-03-20 13:58:33.573 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-ETS2DEK9JHC1647755913558'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-03-20 13:58:33.573 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2022-03-20 13:58:33.573 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2022-03-20 13:58:33.574 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6bf28f61
2022-03-20 13:58:33.623 febs [main] INFO  p6spy - 2022-03-20 13:58:33 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2022-03-20 13:58:34.203 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2022-03-20 13:58:35.302 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2022-03-20 13:58:35.352 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-03-20 13:58:35.432 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2022-03-20 13:58:35.446 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2022-03-20 13:58:35.457 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 13:58:35.458 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2022-03-20 13:58:35.473 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2022-03-20 13:58:35.475 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.061 seconds (JVM running for 7.852)
2022-03-20 13:58:35.483 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2022-03-20 13:58:35.484 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2022-03-20 13:58:35.484 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2022-03-20 13:58:35.518 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2022-03-20 13:58:35.525 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:58:35.593 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2022-03-20 13:58:35.613 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 11 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2022-03-20 13:58:35.627 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2022-03-20 13:58:35.631 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:58:35.634 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2022-03-20 13:58:35.636 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2022-03-20 13:58:35.639 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2022-03-20 13:58:35.641 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:58:35.644 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2022-03-20 13:58:35.646 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2022-03-20 13:58:35.648 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2022-03-20 13:58:35.650 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:58:35.654 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2022-03-20 13:58:35.656 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2022-03-20 13:58:35.657 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2022-03-20 13:58:35.660 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 13:58:35.663 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2022-03-20 13:58:35.665 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2022-03-20 13:58:35.667 febs [main] INFO  p6spy - 2022-03-20 13:58:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2022-03-20 13:58:35.668 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2022-03-20 13:58:35.668 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2022-03-20 13:58:35.668 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2022-03-20 13:58:35.668 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2022-03-20 13:58:35.668 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2022-03-20T13:58:35.668
2022-03-20 13:58:36.137 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-20 13:58:36.137 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-03-20 13:58:36.150 febs [RMI TCP Connection(3)-192.168.42.78] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-03-20 13:58:36.443 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2022-03-20 13:58:36.449 febs [RMI TCP Connection(5)-192.168.42.78] INFO  p6spy - 2022-03-20 13:58:36 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2022-03-20 13:58:36.454 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2022-03-20 13:58:36.454 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-ETS2DEK9JHC1647755152720"'s failed in-progress jobs.
2022-03-20 13:58:36.462 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755913558 started.
2022-03-20 13:59:32.739 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:59:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:32.774 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:59:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:39.614 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:59:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:39.625 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:59:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:43.009 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:43.150 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:43.302 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:44.160 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 13:59:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:44.797 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:59:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:44.995 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:59:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:45.833 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 13:59:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:46.152 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:59:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:46.230 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:59:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:46.317 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:59:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:46.404 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 13:59:46 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:46.565 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:59:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:48.645 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 13:59:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:48.828 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 13:59:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:48.966 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 13:59:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:49.111 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 13:59:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:49.229 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 13:59:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:49.363 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 13:59:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:49.494 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 13:59:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:49.644 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 13:59:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 13:59:51.469 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 13:59:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'sungou';
2022-03-20 13:59:52.608 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 13:59:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'sungou';
2022-03-20 14:00:24.849 febs [http-nio-9527-exec-4] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:00:33.182 febs [http-nio-9527-exec-5] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:00:47.648 febs [http-nio-9527-exec-9] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:00:57.809 febs [http-nio-9527-exec-3] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:01:14.816 febs [http-nio-9527-exec-1] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:04:35.087 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 14:04:35 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:04:35.093 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 14:04:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:03.692 febs [http-nio-9527-exec-10] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 14:05:10.784 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:10.908 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.092 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.199 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.328 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.568 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.906 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 14:05:11.911 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'sungou';
2022-03-20 14:05:12.370 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'sungou';
2022-03-20 14:05:18.122 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 7 ms | SQL 语句：
INSERT INTO t_user ( username, password, status, create_time, ssex, description, avatar ) VALUES ( 'sungou', '7c4c8dd786e6a69dac59e863d67df123', '1', '2022-03-20T14:05:18.106+0800', '2', '注册用户', 'default.jpg' );
2022-03-20 14:05:18.130 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE name = '孙笑川';
2022-03-20 14:05:18.139 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 1 ms | SQL 语句：
UPDATE owner_info SET user_id=15 WHERE ID = 2;
2022-03-20 14:05:18.142 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 15, 75 );
2022-03-20 14:05:18.147 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 15, 'light', 'head', '0', '1', '1', 'rgb(66, 185, 131)' );
2022-03-20 14:05:18.150 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 14:05:18.153 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2022-03-20 14:05:18.156 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2022-03-20 14:05:18.157 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 14:05:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2022-03-20 14:05:23.353 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 14:05:23.385 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T14:05:23.372+0800' WHERE username = 'sungou';
2022-03-20 14:05:23.387 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 14:05:23.407 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sungou', '2022-03-20T14:05:23.397+0800', '', '127.0.0.1' );
2022-03-20 14:05:23.435 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2022-03-20 14:05:23.487 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:23.506 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou') order by m.order_num;
2022-03-20 14:05:23.833 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:23.834 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:23.841 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 15;
2022-03-20 14:05:23.847 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 2;
2022-03-20 14:05:23.855 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 5 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 2 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 2) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 2 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 2 AND pm.type = 2) AS on4;
2022-03-20 14:05:23.862 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 14:05:23.867 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 14:05:23 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 14:05:24.111 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:24 | 耗时 273 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 14:05:24.113 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 14:05:24.115 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 14:05:24.117 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 14:05:24.120 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:24 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'sungou' group by days;
2022-03-20 14:05:30.411 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:30.411 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:30.419 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2022-03-20 14:05:30.420 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 14:05:30 | 耗时 7 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:34.522 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:34.523 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:34.530 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 14:05:34 | 耗时 1 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 14:05:34.589 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 14:05:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:34.593 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 14:05:34 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15 LIMIT 0,10;
2022-03-20 14:05:35.628 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:35.647 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM epidemic_register er LEFT JOIN t_user tu ON (tu.USER_ID = er.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:36.770 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:36.772 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:36.772 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 14:05:36 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 14:05:36.788 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:38.234 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:38.235 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:38.239 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 14:05:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 14:05:38.336 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 14:05:38 | 耗时 83 ms | SQL 语句：
SELECT COUNT(1) FROM daily_manage dm LEFT JOIN t_user tu ON (tu.USER_ID = dm.user_id) LEFT JOIN worker_info wi ON (wi.id = dm.worker) WHERE 1 = 1 AND dm.user_id = 15;
2022-03-20 14:05:40.521 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:40.524 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:40.526 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 14:05:40 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 14:05:40.526 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 14:05:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:53.414 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:53.416 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 14:05:53.421 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 14:05:53 | 耗时 4 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 14:05:53.426 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 14:05:53 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15;
2022-03-20 14:05:53.428 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 14:05:53 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 15 LIMIT 0,10;
2022-03-20 14:58:35.450 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 15:58:35.445 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 16:58:35.444 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2022-03-20 17:05:31.893 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 17:05:31.904 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:05:31 | 耗时 7 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T17:05:31.895+0800' WHERE username = 'admin';
2022-03-20 17:05:31.908 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:05:31 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 17:05:31.924 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:05:31 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2022-03-20T17:05:31.919+0800', '', '127.0.0.1' );
2022-03-20 17:05:31.948 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:05:31.954 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:05:31 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2022-03-20 17:05:32.212 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:05:32.213 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:05:32.317 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 103 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2022-03-20 17:05:32.318 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 100 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 17:05:32.319 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 17:05:32.321 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 17:05:32.322 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 17:05:32.324 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2022-03-20 17:05:32.332 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2022-03-20 17:05:32.336 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2022-03-20 17:05:32.339 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 17:05:32.342 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2022-03-20 17:05:32.344 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:05:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2022-03-20 17:05:44.649 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:05:44.674 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 17:05:44 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2022-03-20 17:05:44.675 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 17:05:44 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2022-03-20 17:05:59.847 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:05:59.866 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 17:05:59 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2022-03-20 17:05:59.867 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 17:05:59 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.date, bi.images, bi.publisher FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date LIMIT 0,10;
2022-03-20 17:06:09.130 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:09.130 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:09.134 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:06:09 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 17:06:09.136 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:06:09 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM daily_manage dm LEFT JOIN t_user tu ON (tu.USER_ID = dm.user_id) LEFT JOIN worker_info wi ON (wi.id = dm.worker) WHERE 1 = 1;
2022-03-20 17:06:09.137 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:06:09 | 耗时 0 ms | SQL 语句：
SELECT dm.id, dm.type, dm.content, dm.images, dm.user_id AS userId, dm.create_date AS createDate, dm.read_status AS readStatus, dm.worker AS worker, tu.USERNAME AS userName, wi.`name` AS workerName, wi.phone, wi.image FROM daily_manage dm LEFT JOIN t_user tu ON ( tu.USER_ID = dm.user_id ) LEFT JOIN worker_info wi ON ( wi.id = dm.worker ) WHERE 1 = 1 ORDER BY dm.create_date DESC LIMIT 0,10;
2022-03-20 17:06:19.439 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:19.447 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:06:19 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM epidemic_register er LEFT JOIN t_user tu ON (tu.USER_ID = er.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) WHERE 1 = 1;
2022-03-20 17:06:19.449 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:06:19 | 耗时 0 ms | SQL 语句：
SELECT er.id, er.user_id AS userId, er.temperature, er.code_status AS codeStatus, er.through_city AS throughCity, er.create_date AS createDate, oi.`name`, oi.phone FROM epidemic_register er LEFT JOIN t_user tu ON ( tu.USER_ID = er.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID) WHERE 1 = 1 ORDER BY er.create_date LIMIT 0,10;
2022-03-20 17:06:22.908 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:22.908 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:22.908 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:22.911 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:06:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 17:06:22.912 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 17:06:22 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2022-03-20 17:06:22.914 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:22.918 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 17:06:22 | 耗时 6 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2022-03-20 17:06:22.923 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:06:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2022-03-20 17:06:22.924 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:06:22 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2022-03-20 17:06:38.629 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:38.639 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:06:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2022-03-20 17:06:38.641 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:06:38 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2022-03-20 17:06:42.680 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:42.682 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:06:42 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2022-03-20 17:06:55.853 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:55.853 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:55.880 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:06:55 | 耗时 25 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:06:55.880 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:06:55 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 17:06:55.882 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:06:55 | 耗时 0 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 LIMIT 0,10;
2022-03-20 17:06:58.616 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:58.618 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:06:58.618 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:06:58 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:06:58.620 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:06:58 | 耗时 0 ms | SQL 语句：
SELECT ID,address,building_id,number,floor,usage_area,surface_area,nature,rooms,buyer,staff_id,owner_id,create_date FROM houses_info;
2022-03-20 17:07:01.841 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:01.846 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:07:01 | 耗时 2 ms | SQL 语句：
SELECT ci.* FROM consumption_info ci WHERE ci.houses_id = 1 AND DATE_FORMAT( concat( ci.`year`, '-', ci.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT( DATE_SUB( now(), INTERVAL 1 MONTH ), '%Y-%m');
2022-03-20 17:07:26.906 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:26.906 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:26.909 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:07:26 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:07:26.910 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:07:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2022-03-20 17:07:26.912 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:07:26 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 LIMIT 0,10;
2022-03-20 17:07:32.009 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:32.018 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 17:07:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM property_item pi WHERE 1 = 1;
2022-03-20 17:07:32.019 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.name, pi.price, pi.type, pi.unit, pi.create_date AS createDate FROM property_item pi WHERE 1 = 1 LIMIT 0,10;
2022-03-20 17:07:36.098 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:36.098 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:36.100 febs [http-nio-9527-exec-10] INFO  p6spy - 2022-03-20 17:07:36 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2022-03-20 17:07:36.113 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 17:07:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2022-03-20 17:07:36.115 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 17:07:36 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2022-03-20 17:07:52.761 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:07:52.789 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:07:52 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM worker_info wi WHERE 1 = 1;
2022-03-20 17:07:52.791 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:07:52 | 耗时 0 ms | SQL 语句：
SELECT wi.id, wi.name, wi.phone, wi.image, wi.type, wi.create_date AS createDate FROM worker_info wi WHERE 1 = 1 LIMIT 0,10;
2022-03-20 17:08:07.296 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:07 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 17:08:07.302 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'mrbird';
2022-03-20 17:08:24.635 febs [http-nio-9527-exec-3] INFO  com.baidu.aip.client.BaseClient - get access_token success. current state: STATE_AIP_AUTH_OK
2022-03-20 17:08:39.646 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2022-03-20 17:08:39.663 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 11 ms | SQL 语句：
UPDATE t_user SET last_login_time='2022-03-20T17:08:39.648+0800' WHERE username = 'fank';
2022-03-20 17:08:39.668 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2022-03-20 17:08:39.681 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2022-03-20T17:08:39.676+0800', '', '127.0.0.1' );
2022-03-20 17:08:39.704 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:08:39.709 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2022-03-20 17:08:39.924 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:08:39.926 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:08:39.949 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 22 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 14;
2022-03-20 17:08:39.952 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2022-03-20 17:08:39.957 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 3 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2022-03-20 17:08:39.960 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2022-03-20 17:08:39.963 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2022-03-20 17:08:39.973 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 44 ms | SQL 语句：
select count(1) from t_login_log;
2022-03-20 17:08:39.974 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2022-03-20 17:08:39.977 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2022-03-20 17:08:39.979 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2022-03-20 17:08:39.981 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:08:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2022-03-20 17:08:48.385 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:08:48.385 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:08:48.388 febs [http-nio-9527-exec-1] INFO  p6spy - 2022-03-20 17:08:48 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2022-03-20 17:08:48.394 febs [http-nio-9527-exec-6] INFO  p6spy - 2022-03-20 17:08:48 | 耗时 7 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 17:09:02.719 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:02.722 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 17:09:02 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 2;
2022-03-20 17:09:08.171 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:08.171 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:08.178 febs [http-nio-9527-exec-3] INFO  p6spy - 2022-03-20 17:09:08 | 耗时 5 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:09:08.190 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:09:08 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 17:09:08.193 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:09:08 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 17:09:13.491 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:51.489 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:51.551 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:09:51 | 耗时 9 ms | SQL 语句：
INSERT INTO payment_record ( user_id, payment_id, create_date, payment_type ) VALUES ( 14, 15, '2022-03-20 17:09:51', 1 );
2022-03-20 17:09:54.184 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:54.184 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:09:54.193 febs [http-nio-9527-exec-8] INFO  p6spy - 2022-03-20 17:09:54 | 耗时 6 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:09:54.194 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:09:54 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN payment_record pr ON (pr.payment_id = pm.id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 17:09:54.196 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:09:54 | 耗时 1 ms | SQL 语句：
SELECT pm.id, pm.houses_id AS housesId, pm.year, pm.month, pm.type, pm.price, pm.dosage, oi.name, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pr.create_date AS createDate, pr.payment_type AS paymentType, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_manage pm LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN payment_record pr ON ( pr.payment_id = pm.id ) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 17:10:00.415 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:10:00.424 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:10:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM epidemic_register er LEFT JOIN t_user tu ON (tu.USER_ID = er.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 17:10:00.425 febs [http-nio-9527-exec-2] INFO  p6spy - 2022-03-20 17:10:00 | 耗时 0 ms | SQL 语句：
SELECT er.id, er.user_id AS userId, er.temperature, er.code_status AS codeStatus, er.through_city AS throughCity, er.create_date AS createDate, oi.`name`, oi.phone FROM epidemic_register er LEFT JOIN t_user tu ON ( tu.USER_ID = er.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID) WHERE 1 = 1 AND oi.user_id = 14 ORDER BY er.create_date LIMIT 0,10;
2022-03-20 17:10:05.332 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:10:05.333 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:10:05.336 febs [http-nio-9527-exec-7] INFO  p6spy - 2022-03-20 17:10:05 | 耗时 0 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2022-03-20 17:10:05.338 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:10:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1 AND oi.user_id = 14;
2022-03-20 17:10:05.340 febs [http-nio-9527-exec-5] INFO  p6spy - 2022-03-20 17:10:05 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 AND oi.user_id = 14 LIMIT 0,10;
2022-03-20 17:10:10.916 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:10:10.916 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2022-03-20 17:10:10.926 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:10:10 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM daily_manage dm LEFT JOIN t_user tu ON (tu.USER_ID = dm.user_id) LEFT JOIN worker_info wi ON (wi.id = dm.worker) WHERE 1 = 1 AND dm.user_id = 14;
2022-03-20 17:10:10.926 febs [http-nio-9527-exec-4] INFO  p6spy - 2022-03-20 17:10:10 | 耗时 8 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2022-03-20 17:10:10.928 febs [http-nio-9527-exec-9] INFO  p6spy - 2022-03-20 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT dm.id, dm.type, dm.content, dm.images, dm.user_id AS userId, dm.create_date AS createDate, dm.read_status AS readStatus, dm.worker AS worker, tu.USERNAME AS userName, wi.`name` AS workerName, wi.phone, wi.image FROM daily_manage dm LEFT JOIN t_user tu ON ( tu.USER_ID = dm.user_id ) LEFT JOIN worker_info wi ON ( wi.id = dm.worker ) WHERE 1 = 1 AND dm.user_id = 14 ORDER BY dm.create_date DESC LIMIT 0,10;
2022-03-20 17:10:59.598 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755913558 paused.
2022-03-20 17:10:59.598 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2022-03-20 17:10:59.604 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2022-03-20 17:10:59.605 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2022-03-20 17:10:59.605 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755913558 shutting down.
2022-03-20 17:10:59.605 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755913558 paused.
2022-03-20 17:10:59.608 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-ETS2DEK9JHC1647755913558 shutdown complete.
2022-03-20 17:10:59.611 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2022-03-20 17:10:59.611 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2022-03-20 17:10:59.614 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
