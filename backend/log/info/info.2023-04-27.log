2023-04-27 18:50:05.997 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-ITVOUJ5 with PID 15240 (started by DELL in E:\Project\小区物业管理系统\backend)
2023-04-27 18:50:06.001 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-04-27 18:50:10.073 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-04-27 18:50:10.076 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-04-27 18:50:10.137 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44ms. Found 0 repository interfaces.
2023-04-27 18:50:10.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$3f43ff1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$19934ac3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b004d9f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:10.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$1b84db9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$144992ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$18c3601] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.588 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$edcd468c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:11.609 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-04-27 18:50:11.621 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-04-27 18:50:12.001 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-04-27 18:50:12.001 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-04-27 18:50:12.001 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-04-27 18:50:12.001 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-04-27 18:50:12.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:12.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:12.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:13.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.100 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.191 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b985983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$bde51b9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.522 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$78fc018b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.535 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9fc778b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$eda3f712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:14.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-27 18:50:15.786 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-04-27 18:50:15.806 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-04-27 18:50:15.815 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-04-27 18:50:15.815 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-04-27 18:50:15.824 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;F:\SQL\bin;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;F:\Git\Git\cmd;F:\mongoDB\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin\bin;F:\Xshell\;%MAVEN_HOME%\bin;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin;F:\node;F:\node\node_global;C:\Program Files\dotnet\;F:\xftp\xftp7\;F:\node\;C:\Program Files(x86)\Tencent\微信开发者工具\dll;F:\python\python31\Scripts\;F:\python\python31\;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;F:\VS code\Microsoft VS Code\bin;E:\Developer\nodejs\npm_global;F:\MySQL\mysql-8.0.23-winx64\bin;C:\Users\DELL\AppData\Roaming\npm;.]
2023-04-27 18:50:15.995 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-04-27 18:50:15.996 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 9946 ms
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-04-27 18:50:16.575 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-04-27 18:50:17.169 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-04-27 18:50:17.180 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-04-27 18:50:17.180 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-04-27 18:50:17.183 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-04-27 18:50:17.184 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-04-27 18:50:17.185 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'DESKTOP-ITVOUJ51682592617171'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-04-27 18:50:17.185 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-04-27 18:50:17.185 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-04-27 18:50:17.186 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@376b5cb2
2023-04-27 18:50:17.324 febs [main] INFO  p6spy - 2023-04-27 18:50:17 | 耗时 92 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-04-27 18:50:18.091 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-04-27 18:50:19.320 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-04-27 18:50:19.367 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-04-27 18:50:19.430 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-04-27 18:50:19.444 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-04-27 18:50:19.459 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-27 18:50:19.462 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-04-27 18:50:19.472 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-04-27 18:50:19.474 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 14.329 seconds (JVM running for 15.584)
2023-04-27 18:50:19.480 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-04-27 18:50:19.481 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-04-27 18:50:19.481 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-04-27 18:50:19.519 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-04-27 18:50:19.554 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.614 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-04-27 18:50:19.633 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 9 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.654 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-04-27 18:50:19.658 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.661 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-04-27 18:50:19.663 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.666 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-04-27 18:50:19.668 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.671 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-04-27 18:50:19.674 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.676 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-04-27 18:50:19.679 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.682 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-04-27 18:50:19.686 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.687 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-04-27 18:50:19.691 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.693 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2023-04-27 18:50:19.695 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.696 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-04-27 18:50:19.699 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.701 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2023-04-27 18:50:19.704 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.706 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2023-04-27 18:50:19.708 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:50:19.711 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油';
2023-04-27 18:50:19.713 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-27 18:50:19.715 febs [main] INFO  p6spy - 2023-04-27 18:50:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2023-04-27 18:50:19.716 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-04-27 18:50:19.716 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-04-27 18:50:19.716 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-04-27 18:50:19.716 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-04-27 18:50:19.716 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-04-27T18:50:19.716
2023-04-27 18:50:20.268 febs [RMI TCP Connection(11)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-27 18:50:20.268 febs [RMI TCP Connection(11)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-04-27 18:50:20.282 febs [RMI TCP Connection(11)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2023-04-27 18:50:20.446 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-04-27 18:50:20.473 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-04-27 18:50:20.474 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-ITVOUJ51682431904416"'s failed in-progress jobs.
2023-04-27 18:50:20.484 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682592617171 started.
2023-04-27 18:50:20.596 febs [RMI TCP Connection(13)-192.168.56.1] INFO  p6spy - 2023-04-27 18:50:20 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-04-27 18:54:52.383 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-27 18:54:52.562 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:54:52 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-27T18:54:52.521+0800' WHERE username = 'fank';
2023-04-27 18:54:52.567 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:54:52 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:54:52.602 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:54:52 | 耗时 11 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-04-27T18:54:52.579+0800', '', '127.0.0.1' );
2023-04-27 18:54:52.763 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:54:52.806 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:54:52 | 耗时 7 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2023-04-27 18:54:53.081 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:54:53.085 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:54:53.104 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 13 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 18:54:53.108 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:54:53.109 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 10 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 18:54:53.111 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:54:53.115 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 18:54:53.118 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 18:54:53.120 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 8 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 18:54:53.141 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 18 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 18:54:53.156 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 8 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 18:54:53.165 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 4 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 18:54:53.167 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 18:54:53.180 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 7 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 18:54:53.181 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:54:53 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 18:55:24.171 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:24.173 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:24.193 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 18:55:24 | 耗时 9 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-27 18:55:24.248 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:55:24 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-27 18:55:24.254 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:55:24 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-27 18:55:31.512 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:31.526 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:55:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-27 18:55:31.527 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:55:31 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 18:55:46.215 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:46.215 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:46.215 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:46.220 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 18:55:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-27 18:55:46.220 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:55:46 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-27 18:55:46.230 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:55:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-27 18:55:46.231 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:55:46.233 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:55:46 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-27 18:55:46.236 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 18:55:46 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-27 18:55:59.988 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:00.003 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:00 | 耗时 4 ms | SQL 语句：
UPDATE houses_info SET address='北京市朝阳区小红门鸿博家园一期A区23栋三单元601室', building_id=1, number='601', floor=6, usage_area=254.68, surface_area=275.31, nature=1, rooms=4, buyer='荍荍', staff_id=3, owner_id=1 WHERE ID=2;
2023-04-27 18:56:00.064 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:00.070 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 18:56:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-27 18:56:00.072 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 18:56:00 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-27 18:56:13.572 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:13.582 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 18:56:13 | 耗时 4 ms | SQL 语句：
UPDATE houses_info SET address='北京市朝阳区小红门鸿博家园一期A区23栋三单元602室', building_id=1, number='602', floor=6, usage_area=272.54, surface_area=291.71, nature=1, rooms=4, buyer='房', staff_id=3, owner_id=1 WHERE ID=1;
2023-04-27 18:56:13.651 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:13.657 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:56:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-27 18:56:13.659 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:56:13 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-27 18:56:19.391 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:19.411 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2023-04-27 18:56:19.413 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:19 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2023-04-27 18:56:23.727 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:23.733 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 18:56:23 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 5;
2023-04-27 18:56:25.861 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:25.864 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 18:56:25 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 4;
2023-04-27 18:56:27.731 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:27.734 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:56:27 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 2;
2023-04-27 18:56:34.964 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:34.966 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:34 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, bi.images FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) WHERE 1 = 1 AND hi.owner_id = 1;
2023-04-27 18:56:51.150 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:51.193 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:56:51 | 耗时 9 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 18:56:51.197 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 18:56:51.198 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 18:56:54.124 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:54.150 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 18:56:54 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-27 18:56:54.151 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 18:56:54 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-27 18:56:59.132 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:59.133 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:56:59.136 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 18:56:59.138 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 18:56:59.139 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 18:56:59.140 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:56:59.141 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:56:59.141 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 18:56:59.143 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 18:56:59.143 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 18:56:59.145 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 18:56:59.148 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 18:56:59.150 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 18:56:59.152 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 18:56:59.153 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 18:56:59 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 18:58:07.464 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-27 18:58:07.467 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-27T18:58:07.465+0800' WHERE username = '荍荍加油';
2023-04-27 18:58:07.469 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 18:58:07.477 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '荍荍加油', '2023-04-27T18:58:07.474+0800', '', '127.0.0.1' );
2023-04-27 18:58:07.488 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-27 18:58:07.504 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:07.511 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油') order by m.order_num;
2023-04-27 18:58:07.609 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:07.613 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:07.617 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 18:58:07.617 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 18:58:07.619 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:58:07.621 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:58:07.623 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 18:58:07.624 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 18:58:07.627 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 18:58:07.627 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 18:58:07.629 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 18:58:07.644 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:58:07 | 耗时 12 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 18:58:38.755 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:38.755 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:38.758 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 18:58:38 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-27 18:58:38.759 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 18:58:38 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 16;
2023-04-27 18:58:45.254 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:45.255 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:58:45.258 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 18:58:45.260 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 18:58:45.261 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 18:58:45.262 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:58:45.263 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:58:45.265 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 18:58:45.265 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 18:58:45.267 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 18:58:45.267 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 18:58:45.271 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 18:58:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 18:59:12.921 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:59:12.922 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 18:59:12.925 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 18:59:12.927 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 18:59:12.928 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 18:59:12.928 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:59:12.930 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 18:59:12.931 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 18:59:12.932 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 18:59:12.933 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 18:59:12.934 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 18:59:12.937 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 18:59:12 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 19:00:56.245 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:00:56.245 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:00:56.250 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 19:00:56.250 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:00:56.252 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 19:00:56.252 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:00:56.253 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:00:56.254 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 19:00:56.255 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:00:56.256 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:00:56.257 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 19:00:56.258 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:00:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 19:00:59.151 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:00:59.151 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:00:59.156 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 19:00:59.157 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:00:59.159 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 19:00:59.160 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:00:59.161 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:00:59.162 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 19:00:59.164 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:00:59.165 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:00:59.167 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 19:00:59.168 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:00:59 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 19:01:16.209 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:01:16.212 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:01:16.215 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 19:01:16.217 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:01:16.218 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 19:01:16.218 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:01:16.220 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:01:16.220 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 19:01:16.223 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:01:16.223 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:01:16.226 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 19:01:16.226 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:01:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 19:02:52.971 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-27 19:02:52.979 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:02:52 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-27T19:02:52.973+0800' WHERE username = '荍荍加油';
2023-04-27 19:02:52.982 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:02:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 19:02:52.990 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:02:52 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '荍荍加油', '2023-04-27T19:02:52.986+0800', '', '127.0.0.1' );
2023-04-27 19:02:53.000 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-27 19:02:53.016 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:02:53.018 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油') order by m.order_num;
2023-04-27 19:02:53.115 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:02:53.116 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:02:53.119 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-27 19:02:53.120 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:02:53.121 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-27 19:02:53.122 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:02:53.125 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:02:53.125 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-27 19:02:53.130 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:02:53.130 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:02:53.133 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-27 19:02:53.133 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:02:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-27 19:03:00.110 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:00.111 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:00.113 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:00 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-27 19:03:00.114 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:00 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 16;
2023-04-27 19:03:04.774 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:04.777 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:03:04 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 4;
2023-04-27 19:03:23.817 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-27 19:03:23.821 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:03:23 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-27T19:03:23.819+0800' WHERE username = 'fank';
2023-04-27 19:03:23.823 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:03:23 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 19:03:23.831 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:03:23 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-04-27T19:03:23.828+0800', '', '127.0.0.1' );
2023-04-27 19:03:23.848 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:23.851 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:03:23 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2023-04-27 19:03:23.993 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:23.995 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:03:24.013 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 14 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:03:24.013 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 17 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 19:03:24.015 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:03:24.015 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 19:03:24.017 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:03:24.017 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 19:03:24.019 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:03:24.019 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:03:24.021 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 19:03:24.022 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 19:03:24.025 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 19:03:24.033 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 19:03:24.035 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:03:24 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 19:04:00.222 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:00.438 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:00 | 耗时 211 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-27 19:04:00.440 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:00 | 耗时 1 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:04:13.585 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:13.594 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:04:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1 AND bi.community LIKE CONCAT('%', '金河苑', '%');
2023-04-27 19:04:13.595 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:04:13 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 AND bi.community LIKE CONCAT('%','金河苑','%') ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:04:18.227 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:18.240 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:04:18 | 耗时 4 ms | SQL 语句：
DELETE FROM building_info WHERE ID IN ( 9 );
2023-04-27 19:04:18.281 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:18.285 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:04:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1 AND bi.community LIKE CONCAT('%', '金河苑', '%');
2023-04-27 19:04:18.287 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:04:18 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 AND bi.community LIKE CONCAT('%','金河苑','%') ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:04:20.382 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:20.382 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:20.383 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:20.386 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:20.387 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:04:20 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-27 19:04:20.398 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:04:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-27 19:04:20.400 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:04:20 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-27 19:04:20.402 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:04:20 | 耗时 2 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-27 19:04:20.406 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:20 | 耗时 3 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-27 19:04:26.748 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:26.753 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:04:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2023-04-27 19:04:26.756 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:04:26 | 耗时 2 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2023-04-27 19:04:30.444 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:30.444 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:30.448 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:04:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-27 19:04:30.451 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-27 19:04:30.456 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:30 | 耗时 2 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-27 19:04:36.400 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:36.410 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:04:36 | 耗时 4 ms | SQL 语句：
UPDATE repair_info SET code='ORD-1675072070796', content='666', repair_status=1, worker=1, create_date='2023-01-30 17:47:50' WHERE ID=3;
2023-04-27 19:04:36.452 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:36.458 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:04:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-27 19:04:36.463 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:04:36 | 耗时 2 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-27 19:04:38.636 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:38.638 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:04:38 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 3;
2023-04-27 19:04:43.718 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:43.724 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:43 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-27 19:04:43.726 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:04:43 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-27 19:04:50.107 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:04:50 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:04:50.113 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:04:53.373 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:04:53.406 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:04:53 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-27 19:04:53.408 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:04:53 | 耗时 1 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-27 19:05:03.053 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:03.059 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:05:03 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:05:03.059 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:05:03.059 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:05:03.059 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:05:03.060 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:05:03.060 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:05:03.060 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:05:03.060 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:05:14.186 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:14.192 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:05:14 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-13') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月13日（星期一）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-27 19:05:14.205 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-27 19:05:14.206 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-27 19:05:14.207 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-27 19:05:14.207 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-27 19:05:14.207 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-27 19:05:14.207 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-27 19:05:14.207 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-27 19:05:14.208 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-27 19:05:14.208 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-27 19:05:14.208 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-27 19:05:14.210 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-27 19:05:14.210 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-27 19:05:14.210 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-27 19:05:14.210 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-27 19:05:14.211 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-27 19:05:14.212 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-27 19:05:14.213 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-27 19:05:14.213 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-27 19:05:14.213 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-27 19:05:14.214 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-27 19:05:14.215 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:05:14.216 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:05:14.217 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:05:14.217 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:05:14.217 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:05:14.217 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:05:14.217 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:05:18.404 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:18.408 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:05:18 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 5;
2023-04-27 19:05:22.519 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:22.526 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:05:22 | 耗时 4 ms | SQL 语句：
UPDATE infrastructure_manage SET `date` = '2023-02-15', message = '中国近代史纲要', status = 1, worker = 1 WHERE id = 5;
2023-04-27 19:05:22.576 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:22.581 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:05:22 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-13') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月13日（星期一）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-27 19:05:22.584 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-27 19:05:22.585 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-27 19:05:22.586 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-27 19:05:22.587 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-27 19:05:22.588 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-27 19:05:22.588 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-27 19:05:22.588 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-27 19:05:22.588 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-27 19:05:22.588 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:05:22.589 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:05:22.590 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:05:22.590 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:05:24.849 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:24.851 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:05:24 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 1;
2023-04-27 19:05:28.402 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:28.406 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:05:28 | 耗时 0 ms | SQL 语句：
UPDATE infrastructure_manage SET `date` = '2023-02-17', message = '冰红茶是个伟大创造', status = 3, worker = 1 WHERE id = 1;
2023-04-27 19:05:28.450 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:28.454 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:05:28 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-13') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:05:28.455 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月13日（星期一）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-27 19:05:28.456 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-27 19:05:28.457 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-27 19:05:28.457 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-27 19:05:28.457 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-27 19:05:28.458 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-27 19:05:28.459 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-27 19:05:28.460 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-27 19:05:28.461 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-27 19:05:28.461 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-27 19:05:28.461 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-27 19:05:28.461 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-27 19:05:28.461 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:05:28.462 febs [http-nio-9527-exec-4] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:05:29.574 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:05:29.576 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:05:29 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 1;
2023-04-27 19:06:43.393 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-27 19:06:43.401 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-27T19:06:43.396+0800' WHERE username = 'fank';
2023-04-27 19:06:43.403 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-27 19:06:43.414 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-04-27T19:06:43.410+0800', '', '127.0.0.1' );
2023-04-27 19:06:43.435 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:06:43.440 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2023-04-27 19:06:43.618 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:06:43.620 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:06:43.644 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 22 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 19:06:43.644 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 20 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:06:43.646 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 19:06:43.648 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 19:06:43.649 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:06:43.650 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:06:43.652 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:06:43.654 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:06:43.654 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 19:06:43.657 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 19:06:43.657 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 19:06:43.668 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 8 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 19:06:43.670 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:06:43 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 19:06:47.267 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:06:47.273 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:06:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-27 19:06:47.274 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-27 19:06:47 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:07:00.971 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:00.972 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:00.976 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:07:00 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-27 19:07:00.976 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:07:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-27 19:07:00.978 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:07:00 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-27 19:07:03.029 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:03.035 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:07:03 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-27 19:07:03.036 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:07:03 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-27 19:07:11.190 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:11.194 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:07:11 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:07:11.195 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:07:11.196 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:07:15.630 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:15.636 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:07:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-27 19:07:15.637 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:07:15 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-27 19:07:24.101 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:24.105 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:07:24 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:07:24.105 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:07:24.105 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:07:24.105 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:07:24.106 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:07:24.106 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:07:24.106 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:07:24.106 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:07:30.096 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:30.099 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:07:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-27 19:07:30.100 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:07:30 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-27 19:07:31.920 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:31.924 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:07:31 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:07:31.924 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:07:31.924 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:07:31.924 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:07:31.924 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:07:31.925 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:07:31.925 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:07:31.925 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:07:36.765 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:07:36.770 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:07:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-27 19:07:36.771 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:07:36 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-27 19:10:46.388 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:10:46.394 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:10:46 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-21') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:10:46.395 febs [http-nio-9527-exec-9] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:10:53.594 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:10:53.599 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:10:53 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-13') AND DATE('2023-04-27') ORDER BY im.id;
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月13日（星期一）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-27 19:10:53.601 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-27 19:10:53.602 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-27 19:10:53.603 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-27 19:10:53.604 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-27 19:10:53.605 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-27 19:10:53.606 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-27 19:10:53.607 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-27 19:10:53.607 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-27 19:10:53.607 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-27 19:10:53.607 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-27 19:10:53.607 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月25日（星期二）
2023-04-27 19:10:53.608 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月26日（星期三）
2023-04-27 19:10:53.608 febs [http-nio-9527-exec-2] INFO  c.m.f.c.c.InfrastructureManageController - 04月27日（星期四）
2023-04-27 19:11:01.761 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:11:01.765 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-27 19:11:01 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 5;
2023-04-27 19:11:13.823 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:11:13.826 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:11:13.829 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 19:11:13.832 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 19:11:13.832 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:11:13.833 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:11:13.834 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 19:11:13.835 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:11:13.835 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:11:13.836 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:11:13.839 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 19:11:13.839 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 19:11:13.841 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 19:11:13.845 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 19:11:13.846 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:11:13 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 19:11:58.653 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:11:58.658 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:11:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-27 19:11:58.659 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:11:58 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:19:12.699 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:19:12.706 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:19:12 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-27 19:19:12.708 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-27 19:19:12 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-27 19:34:54.748 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:34:54.748 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:34:54.754 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-27 19:34:54.754 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-27 19:34:54.756 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:34:54.757 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-27 19:34:54.758 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-27 19:34:54.760 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-27 19:34:54.760 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-27 19:34:54.762 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-27 19:34:54.762 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-27 19:34:54.769 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 4 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-27 19:34:54.771 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-27 19:34:54.773 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-27 19:34:54.775 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:34:54 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-27 19:35:09.451 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:09.467 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:35:09 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-27 19:35:09.470 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:35:09 | 耗时 1 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-27 19:35:11.756 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:11.757 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:11.757 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:11.760 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-27 19:35:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-27 19:35:11.760 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-27 19:35:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-27 19:35:11.765 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:11.766 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-27 19:35:11 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-27 19:35:11.770 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:35:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-27 19:35:11.772 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-27 19:35:11 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-27 19:35:25.942 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-27 19:35:25.949 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:35:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2023-04-27 19:35:25.952 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-27 19:35:25 | 耗时 1 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2023-04-27 19:50:19.452 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-27 21:38:53.836 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-27 21:50:13.113 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-27 23:13:23.413 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682592617171 paused.
2023-04-27 23:13:23.431 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-04-27 23:13:23.519 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-04-27 23:13:23.520 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-04-27 23:13:23.520 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682592617171 shutting down.
2023-04-27 23:13:23.520 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682592617171 paused.
2023-04-27 23:13:23.523 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682592617171 shutdown complete.
2023-04-27 23:13:23.540 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2023-04-27 23:13:23.545 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-04-27 23:13:23.554 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
