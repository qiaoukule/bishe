2023-04-24 13:29:01.854 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.886 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.887 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.887 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.888 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.888 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.889 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.889 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.889 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.890 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.890 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.890 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.890 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.891 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.893 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.893 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.893 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.894 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 13:29:01.894 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 14:15:37.813 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:39:49.618 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:39:49.620 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:39:49.620 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:39:49.620 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:39:49.620 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 19:44:32.561 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 21:35:53.981 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682243082547 paused.
2023-04-24 21:35:53.998 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-04-24 21:35:54.110 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-04-24 21:35:54.112 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-04-24 21:35:54.112 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682243082547 shutting down.
2023-04-24 21:35:54.112 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682243082547 paused.
2023-04-24 21:35:54.117 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682243082547 shutdown complete.
2023-04-24 21:35:54.143 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2023-04-24 21:35:54.149 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-04-24 21:35:54.156 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-04-24 21:42:01.834 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-ITVOUJ5 with PID 15732 (started by DELL in E:\Project\小区物业管理系统\backend)
2023-04-24 21:42:01.839 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-04-24 21:42:04.610 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-04-24 21:42:04.614 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-04-24 21:42:04.681 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2023-04-24 21:42:05.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$71cd6f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4c1cbaef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e28e4a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:05.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$4e0e4bc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$46d3031b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.140 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3415a62d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2056b6b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.304 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-04-24 21:42:06.315 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-04-24 21:42:06.755 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-04-24 21:42:06.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-04-24 21:42:06.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-04-24 21:42:06.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-04-24 21:42:06.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:06.781 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.957 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:07.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$3e21c9af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f06e8bc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ab8571b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d250e8e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$202d673e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.374 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 21:42:08.838 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-04-24 21:42:08.851 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-04-24 21:42:08.856 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-04-24 21:42:08.856 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-04-24 21:42:08.863 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;F:\SQL\bin;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;F:\Git\Git\cmd;F:\mongoDB\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin\bin;F:\Xshell\;%MAVEN_HOME%\bin;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin;F:\node;F:\node\node_global;C:\Program Files\dotnet\;F:\xftp\xftp7\;F:\node\;C:\Program Files(x86)\Tencent\微信开发者工具\dll;F:\python\python31\Scripts\;F:\python\python31\;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;F:\VS code\Microsoft VS Code\bin;E:\Developer\nodejs\npm_global;F:\MySQL\mysql-8.0.23-winx64\bin;C:\Users\DELL\AppData\Roaming\npm;.]
2023-04-24 21:42:09.294 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-04-24 21:42:09.294 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7400 ms
2023-04-24 21:42:10.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-04-24 21:42:10.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-04-24 21:42:10.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-04-24 21:42:10.032 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-04-24 21:42:10.032 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-04-24 21:42:10.032 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-04-24 21:42:10.032 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-04-24 21:42:10.032 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-04-24 21:42:10.844 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-04-24 21:42:10.863 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-04-24 21:42:10.863 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-04-24 21:42:10.870 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-04-24 21:42:10.873 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-04-24 21:42:10.874 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'DESKTOP-ITVOUJ51682343730846'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-04-24 21:42:10.874 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-04-24 21:42:10.874 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-04-24 21:42:10.876 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3513d214
2023-04-24 21:42:10.971 febs [main] INFO  p6spy - 2023-04-24 21:42:10 | 耗时 12 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-04-24 21:42:12.036 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-04-24 21:42:14.978 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-04-24 21:42:15.055 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-04-24 21:42:15.173 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-04-24 21:42:15.193 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-04-24 21:42:15.213 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 21:42:15.217 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-04-24 21:42:15.242 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-04-24 21:42:15.246 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 14.292 seconds (JVM running for 20.068)
2023-04-24 21:42:15.257 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-04-24 21:42:15.258 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-04-24 21:42:15.258 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-04-24 21:42:15.299 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 11 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-04-24 21:42:15.318 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 15 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.424 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-04-24 21:42:15.448 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.470 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-04-24 21:42:15.476 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.479 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-04-24 21:42:15.482 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.486 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-04-24 21:42:15.489 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.492 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-04-24 21:42:15.496 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.499 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-04-24 21:42:15.502 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.507 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-04-24 21:42:15.509 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.512 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-04-24 21:42:15.516 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.520 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2023-04-24 21:42:15.523 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.524 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-04-24 21:42:15.527 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.530 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2023-04-24 21:42:15.533 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.535 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2023-04-24 21:42:15.537 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 21:42:15.540 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油';
2023-04-24 21:42:15.542 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-24 21:42:15.544 febs [main] INFO  p6spy - 2023-04-24 21:42:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2023-04-24 21:42:15.545 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-04-24 21:42:15.545 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-04-24 21:42:15.545 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-04-24 21:42:15.545 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-04-24 21:42:15.546 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-04-24T21:42:15.546
2023-04-24 21:42:16.182 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-04-24 21:42:16.198 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-04-24 21:42:16.198 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-ITVOUJ51682243082547"'s failed in-progress jobs.
2023-04-24 21:42:16.206 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682343730846 started.
2023-04-24 21:42:16.253 febs [RMI TCP Connection(5)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-24 21:42:16.254 febs [RMI TCP Connection(5)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-04-24 21:42:16.256 febs [RMI TCP Connection(6)-192.168.56.1] INFO  p6spy - 2023-04-24 21:42:16 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-04-24 21:42:16.277 febs [RMI TCP Connection(5)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2023-04-24 22:02:52.227 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 22:02:58.571 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 22:02:58.672 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:02:58 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-24T22:02:58.589+0800' WHERE username = 'fank';
2023-04-24 22:02:58.678 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:02:58 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:02:58.780 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:02:58 | 耗时 65 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-04-24T22:02:58.697+0800', '', '127.0.0.1' );
2023-04-24 22:02:58.981 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:02:59.031 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2023-04-24 22:02:59.321 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:02:59.325 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:02:59.350 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 18 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:02:59.357 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:02:59.361 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:02:59.366 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:02:59.371 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:02:59.382 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 21 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:02:59.397 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 11 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:02:59.421 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 20 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:02:59.447 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 10 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:02:59.457 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 4 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:02:59.461 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:02:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:12:11.636 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:12:11.634 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:12:11.699 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:12:11.699 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:12:11.705 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:12:11.705 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:12:11.707 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:12:11.707 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:12:11.710 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:12:11.713 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:12:11.716 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:12:11.721 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:12:11.724 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:12:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:30:46.090 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682343730846 paused.
2023-04-24 22:30:46.193 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-04-24 22:30:46.294 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-04-24 22:30:46.294 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-04-24 22:30:46.294 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682343730846 shutting down.
2023-04-24 22:30:46.294 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682343730846 paused.
2023-04-24 22:30:46.297 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682343730846 shutdown complete.
2023-04-24 22:30:46.317 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2023-04-24 22:30:46.322 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-04-24 22:30:46.334 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-04-24 22:30:55.487 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-ITVOUJ5 with PID 18788 (started by DELL in E:\Project\小区物业管理系统\backend)
2023-04-24 22:30:55.490 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-04-24 22:30:56.602 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-04-24 22:30:56.606 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-04-24 22:30:56.667 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39ms. Found 0 repository interfaces.
2023-04-24 22:30:56.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f8a76674] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.035 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d2f6b218] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69684147] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$d4e842f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cdacfa44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$baef9d56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a730ade1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.594 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.598 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-04-24 22:30:57.604 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-04-24 22:30:57.804 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-04-24 22:30:57.805 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-04-24 22:30:57.805 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-04-24 22:30:57.805 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-04-24 22:30:57.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:57.822 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.408 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$c4fbc0d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$774882f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.664 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$325f68e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.676 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$592ae00e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a7075e67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.738 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:58.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-24 22:30:59.079 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-04-24 22:30:59.093 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-04-24 22:30:59.097 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-04-24 22:30:59.098 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-04-24 22:30:59.103 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;F:\SQL\bin;C:\Program Files (x86)\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;F:\Git\Git\cmd;F:\mongoDB\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin\bin;F:\Xshell\;%MAVEN_HOME%\bin;D:\Java_tool\maven\maven_work\apache-maven-3.8.1-bin\apache-maven-3.8.1\bin;F:\node;F:\node\node_global;C:\Program Files\dotnet\;F:\xftp\xftp7\;F:\node\;C:\Program Files(x86)\Tencent\微信开发者工具\dll;F:\python\python31\Scripts\;F:\python\python31\;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;F:\VS code\Microsoft VS Code\bin;E:\Developer\nodejs\npm_global;F:\MySQL\mysql-8.0.23-winx64\bin;C:\Users\DELL\AppData\Roaming\npm;.]
2023-04-24 22:30:59.201 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-04-24 22:30:59.202 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3630 ms
2023-04-24 22:30:59.662 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-04-24 22:30:59.663 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-04-24 22:31:00.161 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-04-24 22:31:00.171 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-04-24 22:31:00.171 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-04-24 22:31:00.174 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-04-24 22:31:00.175 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-04-24 22:31:00.175 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'DESKTOP-ITVOUJ51682346660163'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-04-24 22:31:00.175 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-04-24 22:31:00.175 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-04-24 22:31:00.176 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@46ab4efc
2023-04-24 22:31:00.227 febs [main] INFO  p6spy - 2023-04-24 22:31:00 | 耗时 11 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-04-24 22:31:00.689 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-04-24 22:31:01.778 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-04-24 22:31:01.827 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-04-24 22:31:01.888 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-04-24 22:31:01.904 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-04-24 22:31:01.914 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-04-24 22:31:01.916 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 22:31:01.927 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-04-24 22:31:01.928 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.944 seconds (JVM running for 7.646)
2023-04-24 22:31:01.935 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-04-24 22:31:01.935 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-04-24 22:31:01.935 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-04-24 22:31:01.960 febs [main] INFO  p6spy - 2023-04-24 22:31:01 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-04-24 22:31:01.970 febs [main] INFO  p6spy - 2023-04-24 22:31:01 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.028 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-04-24 22:31:02.041 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.053 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-04-24 22:31:02.057 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.060 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-04-24 22:31:02.063 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.066 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-04-24 22:31:02.068 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.070 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-04-24 22:31:02.074 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.076 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-04-24 22:31:02.079 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.082 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-04-24 22:31:02.085 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.086 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-04-24 22:31:02.089 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.092 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2023-04-24 22:31:02.095 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.096 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-04-24 22:31:02.099 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.101 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2023-04-24 22:31:02.103 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.104 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2023-04-24 22:31:02.107 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 22:31:02.110 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油';
2023-04-24 22:31:02.112 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-24 22:31:02.113 febs [main] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16' ;
2023-04-24 22:31:02.129 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-04-24 22:31:02.129 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-04-24 22:31:02.129 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-04-24 22:31:02.129 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-04-24 22:31:02.129 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-04-24T22:31:02.129
2023-04-24 22:31:02.712 febs [RMI TCP Connection(1)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-24 22:31:02.712 febs [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-04-24 22:31:02.714 febs [RMI TCP Connection(2)-192.168.56.1] INFO  p6spy - 2023-04-24 22:31:02 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-04-24 22:31:02.726 febs [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2023-04-24 22:31:02.907 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-04-24 22:31:02.919 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-04-24 22:31:02.919 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-ITVOUJ51682343730846"'s failed in-progress jobs.
2023-04-24 22:31:02.927 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-ITVOUJ51682346660163 started.
2023-04-24 22:31:31.240 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:31:31.241 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:31:31.310 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 11 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:31:31.314 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:31:31.319 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:31:31.328 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:31:31.338 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 6 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:31:31.340 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:31:31.351 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:31:31.353 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:31:31.373 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:31:31.376 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:31:31.378 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:31:31.381 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:31:31.386 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:31:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:35:16.976 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:35:16.976 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:35:17.012 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:35:17.013 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 6 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:35:17.019 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:35:17.021 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:35:17.022 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:35:17.027 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:35:17.028 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:35:17.032 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:35:17.034 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:35:17.050 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 5 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:35:17.059 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:35:17.063 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:35:17.067 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:35:17 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:35:25.544 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:35:25.549 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:35:25.562 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:35:25.561 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 12 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:35:25.565 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:35:25.568 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:35:25.572 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:35:25.577 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:35:25.585 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 20 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:35:25.590 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:35:25.595 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:35:25.631 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 18 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:35:25.635 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:35:25.653 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 14 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:35:25.657 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:35:25 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:40:02.502 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:40:02.503 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:40:02.509 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:40:02.509 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:40:02.512 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:40:02.512 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:40:02.515 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:40:02.515 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:40:02.519 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:40:02.522 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:40:02.522 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:40:02.533 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:40:02.536 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:40:02.546 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 7 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:40:02.548 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:40:02 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:42:27.828 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:42:27.830 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:42:27.834 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:42:27.837 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:42:27.838 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:42:27.839 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:42:27.840 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:42:27.841 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:42:27.843 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:42:27.843 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:42:27.846 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:42:27.848 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:42:27.852 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:42:27.855 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:42:27.857 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 22:42:27 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:44:17.257 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:44:17.268 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:44:17.335 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 69 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:44:17.338 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 63 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:44:17.338 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:44:17.341 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:44:17.346 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:44:17.348 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 8 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:44:17.350 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:44:17.353 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:44:17.356 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:44:17.369 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 6 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:44:17.372 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:44:17.399 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 23 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:44:17.402 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:44:17 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:45:41.431 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:45:41.431 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:45:41.437 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:45:41.437 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:45:41.440 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:45:41.441 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:45:41.442 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:45:41.444 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:45:41.445 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:45:41.446 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:45:41.448 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:45:41.452 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:45:41.455 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:45:41.457 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:45:41.459 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:45:41 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:45:52.468 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:45:52.473 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:45:52.519 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 45 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:45:52.519 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 44 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:45:52.522 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:45:52.524 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:45:52.524 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:45:52.527 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:45:52.527 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:45:52.529 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:45:52.529 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:45:52.534 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:45:52.538 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:45:52.541 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:45:52.543 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:45:52 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:46:58.205 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:46:58.205 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:46:58.214 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:46:58.214 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:46:58.216 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:46:58.217 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:46:58.218 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:46:58.218 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:46:58.221 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:46:58.221 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:46:58.224 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:46:58.226 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:46:58.229 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:46:58.233 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:46:58.235 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:46:58 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:47:04.255 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:47:04.256 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:47:04.305 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 46 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:47:04.306 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 46 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:47:04.307 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:47:04.310 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:47:04.313 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 6 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:47:04.313 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:47:04.315 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:47:04.315 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:47:04.318 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:47:04.323 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:47:04.332 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:47:04.356 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 22 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:47:04.358 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:47:04 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:48:06.699 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:48:06.699 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:48:06.703 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:48:06.703 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:48:06.705 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:48:06.708 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:48:06.711 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:48:06.711 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 6 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:48:06.713 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:48:06.713 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:48:06.715 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:48:06.719 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:48:06.721 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:48:06.725 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:48:06.727 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 22:48:06 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:49:39.378 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:49:39.378 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:49:39.383 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:49:39.383 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:49:39.384 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:49:39.385 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:49:39.386 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:49:39.386 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:49:39.388 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:49:39.388 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:49:39.391 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:49:39.392 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:49:39.394 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:49:39.397 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:49:39.399 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:49:39 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:51:07.509 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:51:07.511 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:51:07.517 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 22:51:07.519 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 22:51:07.522 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 22:51:07.522 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:51:07.525 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 22:51:07.525 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 22:51:07.528 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 22:51:07.528 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 22:51:07.531 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 22:51:07.534 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 22:51:07.537 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 22:51:07.541 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 22:51:07.542 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:51:07 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 22:52:21.519 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:52:21.804 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:52:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 22:52:21.815 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 22:52:21 | 耗时 2 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 22:52:37.905 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:52:37.905 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:52:37.907 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:52:37.907 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:52:37.914 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 22:52:37 | 耗时 1 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 22:52:37.918 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 22:52:37 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 22:52:37.955 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:52:37 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 22:52:37.960 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:52:37 | 耗时 4 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 22:52:37.965 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 22:52:37 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 22:56:14.162 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:56:14.169 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:56:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 22:56:14.170 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 22:56:14 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 22:59:56.863 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:59:56.885 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 22:59:56 | 耗时 8 ms | SQL 语句：
UPDATE building_info SET name='一座一梯', address='左拐不送', street='00000000000', community='金河苑', usage_area=2001, surface_area=2000, type=1, rooms=40, units=10, layers=10 WHERE ID=3;
2023-04-24 22:59:56.942 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 22:59:56.948 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:59:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 22:59:56.949 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 22:59:56 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:01:03.848 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:01:03.858 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:01:03 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:01:03.860 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:01:03 | 耗时 1 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:06:31.680 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 23:06:31.737 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:06:31 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-24T23:06:31.706+0800' WHERE username = 'fank';
2023-04-24 23:06:31.746 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:06:31 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 23:06:31.784 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:06:31 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-04-24T23:06:31.765+0800', '', '127.0.0.1' );
2023-04-24 23:06:31.834 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:06:31.869 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:06:31 | 耗时 7 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2023-04-24 23:06:32.096 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:06:32.097 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:06:32.105 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:06:32.106 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:06:32.110 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:06:32.111 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:06:32.113 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:06:32.116 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:06:32.117 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:06:32.119 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:06:32.120 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:06:32.128 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 5 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:06:32.132 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:06:32.135 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:06:32.138 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:06:32 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:06:34.630 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:06:34.637 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:06:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:06:34.639 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:06:34 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:06:38.071 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:06:38.080 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:06:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1 AND bi.type = 1;
2023-04-24 23:06:38.083 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:06:38 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 AND bi.type = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:07:19.592 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:19.600 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:07:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:07:19.602 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:07:19 | 耗时 1 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:07:22.485 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:22.492 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1 AND bi.type = 1;
2023-04-24 23:07:22.493 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:22 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 AND bi.type = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:07:26.705 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:26.707 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:26.709 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:07:26.710 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:07:26.711 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:07:26.712 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:07:26.713 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:07:26.714 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:07:26.716 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:07:26.717 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:07:26.718 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:07:26.721 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:07:26.724 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:07:26.739 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 14 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:07:26.741 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:07:26 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:07:34.445 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:34.451 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:07:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:07:34.453 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:07:34 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:07:52.499 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:52.500 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:07:52.507 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:07:52.507 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:07:52.509 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:07:52.510 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:07:52.511 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:07:52.513 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:07:52.514 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:07:52.516 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:07:52.516 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:07:52.523 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 4 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:07:52.524 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:07:52.526 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:07:52.528 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:07:52 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:08:02.239 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:08:02.248 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:08:02 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:08:02.250 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:08:02 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:08:52.997 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:08:53.124 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:08:53 | 耗时 5 ms | SQL 语句：
INSERT INTO building_info ( name, address, street, community, usage_area, surface_area, type, rooms, units, layers, create_date ) VALUES ( '二座四梯', '11111111', '0000000000', '金河苑', 10000, 10020, 2, 24, 4, 6, '2023-04-24 23:08:53' );
2023-04-24 23:08:53.168 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:08:53.173 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:08:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:08:53.174 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:08:53 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:10:46.033 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:10:46.040 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:10:46 | 耗时 3 ms | SQL 语句：
INSERT INTO building_info ( name, address, street, community, usage_area, surface_area, type, rooms, units, layers, create_date ) VALUES ( '二座三梯', '11111111', '0000000000', '金河苑', 8008, 8005, 2, 24, 4, 6, '2023-04-24 23:10:46' );
2023-04-24 23:10:46.091 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:10:46.099 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:10:46 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:10:46.101 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:10:46 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:10:48.981 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:10:48.984 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:10:49.002 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 17 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:10:49.002 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 14 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:10:49.004 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:10:49.006 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:10:49.008 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:10:49.008 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:10:49.009 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:10:49.010 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:10:49.011 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:10:49.017 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:10:49.019 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:10:49.022 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:10:49.024 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:10:49 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:11:12.820 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:11:12.825 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:11:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:11:12.826 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:11:12 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:11:53.789 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:11:53.795 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:11:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:11:53.796 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:11:53 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:12:02.548 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:12:02.550 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:12:02.553 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:12:02.554 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:12:02.555 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:12:02.556 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:12:02.557 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:12:02.558 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:12:02.559 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:12:02.560 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:12:02.562 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:12:02.564 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:12:02.567 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:12:02.570 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:12:02.572 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:12:02 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:12:08.419 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:12:08.437 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:12:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:12:08.439 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:12:08 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:12:49.437 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:12:49.447 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:12:49 | 耗时 4 ms | SQL 语句：
INSERT INTO building_info ( name, address, street, community, usage_area, surface_area, type, rooms, units, layers, create_date ) VALUES ( '平房', '11111111', '0000000000', '金景苑', 120, 122, 1, 1, 1, 1, '2023-04-24 23:12:49' );
2023-04-24 23:12:49.502 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:12:49.528 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:12:49 | 耗时 21 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:12:49.529 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:12:49 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:13:19.368 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:13:19.378 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:13:19 | 耗时 4 ms | SQL 语句：
UPDATE building_info SET name='清洁员工之家', address='11111111', community='金景苑', usage_area=120, surface_area=122, type=1, rooms=1, units=1, layers=1 WHERE ID=6;
2023-04-24 23:13:19.437 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:13:19.443 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:13:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:13:19.444 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:13:19 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:13:30.101 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:13:30.112 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:13:30 | 耗时 4 ms | SQL 语句：
UPDATE building_info SET name='保安之家', address='左拐不送', community='金河苑', usage_area=2001, surface_area=2000, type=1, rooms=40, units=10, layers=10 WHERE ID=3;
2023-04-24 23:13:30.171 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:13:30.197 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:13:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:13:30.199 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:13:30 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:14:13.434 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:14:13.442 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:14:13 | 耗时 4 ms | SQL 语句：
UPDATE building_info SET name='清洁员工之家', address='篮球场旁边', community='金景苑', usage_area=120, surface_area=122, type=1, rooms=1, units=1, layers=1 WHERE ID=6;
2023-04-24 23:14:13.499 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:14:13.503 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:14:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:14:13.505 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:14:13 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:15:35.728 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:15:35.729 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:15:35.733 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:15:35.735 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:15:35.735 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:15:35.737 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:15:35.737 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:15:35.739 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:15:35.739 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:15:35.741 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:15:35.743 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:15:35.743 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:15:35.745 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:15:35.748 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:15:35.749 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:15:35 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:15:42.111 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:15:42.112 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:15:42.119 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:15:42.120 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:15:42.121 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:15:42.121 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:15:42.123 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:15:42.123 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:15:42.124 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:15:42.124 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:15:42.127 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:15:42.129 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:15:42.133 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:15:42.136 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:15:42.137 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:15:42 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:15:58.104 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:15:58.110 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:15:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:15:58.112 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:15:58 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:16:05.349 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:05.349 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:05.349 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:05.352 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:05.359 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:16:05 | 耗时 1 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 23:16:05.363 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:16:05 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 23:16:05.368 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:16:05 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 23:16:05.374 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:16:05 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:16:05.375 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:16:05 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:16:59.607 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:59.607 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:59.613 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:59.616 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:16:59.622 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:16:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 23:16:59.625 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:16:59 | 耗时 1 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 23:16:59.626 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:16:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 23:16:59.626 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:16:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:16:59.629 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:16:59 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:18:15.709 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:15.709 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:15.711 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:15.712 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:15.713 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:18:15 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 23:18:15.715 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:18:15 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 23:18:15.718 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:18:15 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 23:18:15.718 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:18:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:18:15.722 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:18:15 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:18:19.181 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:19.184 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:19.184 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:19.185 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:19.186 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:18:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 23:18:19.188 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:18:19 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 23:18:19.190 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:18:19 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 23:18:19.192 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:18:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:18:19.194 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:18:19 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:18:28.423 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:28.434 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:18:28 | 耗时 3 ms | SQL 语句：
UPDATE houses_info SET address='北京市朝阳区小红门鸿博家园一期A区23栋三单元801室', building_id=1, number='801', floor=8, usage_area=106.5, surface_area=123.2, nature=1, rooms=3, buyer='周迅', staff_id=3, owner_id=2 WHERE ID=3;
2023-04-24 23:18:28.493 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:18:28.499 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:18:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:18:28.501 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:18:28 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:19:25.225 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:25.229 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:19:25 | 耗时 0 ms | SQL 语句：
UPDATE houses_info SET address='北京市朝阳区小红门鸿博家园一期A区23栋三单元801室', building_id=1, number='801', floor=8, usage_area=106.5, surface_area=123.2, nature=1, rooms=3, buyer='周迅', staff_id=3, owner_id=2 WHERE ID=3;
2023-04-24 23:19:25.338 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:25.344 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:19:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:19:25.347 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:19:25 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:19:31.611 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:31.617 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:19:31 | 耗时 3 ms | SQL 语句：
UPDATE houses_info SET address='北京市朝阳区小红门鸿博家园一期A区23栋三单元601室', building_id=1, number='601', floor=6, usage_area=254.68, surface_area=275.31, nature=1, rooms=4, buyer='樊可', staff_id=3, owner_id=1 WHERE ID=2;
2023-04-24 23:19:31.696 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:31.702 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:19:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:19:31.703 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:19:31 | 耗时 0 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:19:47.354 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:47.395 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:19:47 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-24 23:19:47.396 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:19:47 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-24 23:19:55.937 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:19:55.976 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:19:55 | 耗时 7 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-18') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:19:55.982 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:19:55.983 febs [http-nio-9527-exec-5] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:20:02.411 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:02.421 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:20:02 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-14') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:20:02.428 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-24 23:20:02.428 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-24 23:20:02.428 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-24 23:20:02.428 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-24 23:20:02.429 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-24 23:20:02.430 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-24 23:20:02.431 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-24 23:20:02.432 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-24 23:20:02.433 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-24 23:20:02.434 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:20:02.435 febs [http-nio-9527-exec-1] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:20:04.645 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:04.650 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:20:04 | 耗时 1 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 1;
2023-04-24 23:20:07.925 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:07.933 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:20:07 | 耗时 3 ms | SQL 语句：
UPDATE infrastructure_manage SET `date` = '2023-02-16', message = '撒谎但开心，因为不想去什么聚会', status = 1, worker = 1 WHERE id = 1;
2023-04-24 23:20:07.973 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:07.983 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:20:07 | 耗时 3 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-14') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:20:07.987 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-24 23:20:07.987 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-24 23:20:07.987 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-24 23:20:07.988 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-24 23:20:07.989 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-24 23:20:07.990 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-24 23:20:07.991 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-24 23:20:07.992 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-24 23:20:07.993 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:20:07.994 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:20:07.995 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:20:07.995 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:20:07.995 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:20:07.995 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:20:07.995 febs [http-nio-9527-exec-7] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:20:08.825 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:08.828 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:20:08 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) where im.id = 1;
2023-04-24 23:20:10.730 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:10.737 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-04-24 23:20:10 | 耗时 4 ms | SQL 语句：
UPDATE infrastructure_manage SET `date` = '2023-02-16', message = '撒谎但开心，因为不想去什么聚会', status = 3, worker = 1 WHERE id = 1;
2023-04-24 23:20:10.779 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:10.787 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:20:10 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-14') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:20:10.788 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-24 23:20:10.788 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-24 23:20:10.788 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-24 23:20:10.788 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-24 23:20:10.789 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-24 23:20:10.790 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-24 23:20:10.790 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-24 23:20:10.790 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-24 23:20:10.790 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-24 23:20:10.791 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-24 23:20:10.792 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-24 23:20:10.793 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-24 23:20:10.794 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-24 23:20:10.795 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:20:10.796 febs [http-nio-9527-exec-6] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:20:37.781 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:37.783 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:37.785 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:20:37 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-24 23:20:37.833 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:20:37 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-24 23:20:37.836 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:20:37 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-24 23:20:46.111 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:20:46.115 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:20:46 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 3;
2023-04-24 23:29:25.814 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:29:25.849 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:29:25 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-24 23:29:25.851 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:29:25 | 耗时 1 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-24 23:30:04.668 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:30:04.672 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:30:04 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-04-18') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:30:04.672 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:30:04.672 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:30:04.673 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:30:04.673 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:30:04.673 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:30:04.673 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:30:04.673 febs [http-nio-9527-exec-10] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:30:10.836 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:30:10.844 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:30:10 | 耗时 0 ms | SQL 语句：
SELECT im.id AS recordId, im.worker, im.date, im.message, im.status, ii.infrastructure_name AS infrastructureName, ii.community, ii.use_date, ii.id, wi.name AS workerName FROM infrastructure_manage im JOIN worker_info wi ON ( wi.id = im.worker ) JOIN infrastructure_info ii ON (ii.id = im.infrastructure_id) WHERE im.date BETWEEN DATE('2023-02-13') AND DATE('2023-04-24') ORDER BY im.id;
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月13日（星期一）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月14日（星期二）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月15日（星期三）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月16日（星期四）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月17日（星期五）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月18日（星期六）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月19日（星期日）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月20日（星期一）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月21日（星期二）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月22日（星期三）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月23日（星期四）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月24日（星期五）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月25日（星期六）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月26日（星期日）
2023-04-24 23:30:10.847 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月27日（星期一）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 02月28日（星期二）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月01日（星期三）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月02日（星期四）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月03日（星期五）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月04日（星期六）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月05日（星期日）
2023-04-24 23:30:10.848 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月06日（星期一）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月07日（星期二）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月08日（星期三）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月09日（星期四）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月10日（星期五）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月11日（星期六）
2023-04-24 23:30:10.849 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月12日（星期日）
2023-04-24 23:30:10.850 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月13日（星期一）
2023-04-24 23:30:10.850 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月14日（星期二）
2023-04-24 23:30:10.850 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月15日（星期三）
2023-04-24 23:30:10.850 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月16日（星期四）
2023-04-24 23:30:10.851 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月17日（星期五）
2023-04-24 23:30:10.851 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月18日（星期六）
2023-04-24 23:30:10.851 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月19日（星期日）
2023-04-24 23:30:10.851 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月20日（星期一）
2023-04-24 23:30:10.851 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月21日（星期二）
2023-04-24 23:30:10.852 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月22日（星期三）
2023-04-24 23:30:10.852 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月23日（星期四）
2023-04-24 23:30:10.852 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月24日（星期五）
2023-04-24 23:30:10.852 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月25日（星期六）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月26日（星期日）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月27日（星期一）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月28日（星期二）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月29日（星期三）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月30日（星期四）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 03月31日（星期五）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月01日（星期六）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月02日（星期日）
2023-04-24 23:30:10.853 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月03日（星期一）
2023-04-24 23:30:10.854 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月04日（星期二）
2023-04-24 23:30:10.854 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月05日（星期三）
2023-04-24 23:30:10.854 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月06日（星期四）
2023-04-24 23:30:10.854 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月07日（星期五）
2023-04-24 23:30:10.854 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月08日（星期六）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月09日（星期日）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月10日（星期一）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月11日（星期二）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月12日（星期三）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月13日（星期四）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月14日（星期五）
2023-04-24 23:30:10.855 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月15日（星期六）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月16日（星期日）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月17日（星期一）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月18日（星期二）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月19日（星期三）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月20日（星期四）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月21日（星期五）
2023-04-24 23:30:10.856 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月22日（星期六）
2023-04-24 23:30:10.857 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月23日（星期日）
2023-04-24 23:30:10.857 febs [http-nio-9527-exec-3] INFO  c.m.f.c.c.InfrastructureManageController - 04月24日（星期一）
2023-04-24 23:30:51.517 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:30:51.524 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:30:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-24 23:30:51.526 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:30:51 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-24 23:30:58.714 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:30:58.723 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:30:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM infrastructure_info ii WHERE 1 = 1;
2023-04-24 23:30:58.723 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:30:58 | 耗时 0 ms | SQL 语句：
SELECT ii.id, ii.infrastructure_name AS infrastructureName, ii.use_date AS useDate, ii.community, ii.brand FROM infrastructure_info ii WHERE 1 = 1 ORDER BY ii.use_date DESC LIMIT 0,10;
2023-04-24 23:31:01.128 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:01.134 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:31:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM building_info bi WHERE 1 = 1;
2023-04-24 23:31:01.137 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:31:01 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.name, bi.address, bi.street, bi.community, bi.usage_area AS usageArea, bi.surface_area AS surfaceArea, bi.type, bi.rooms, bi.units, bi.layers, bi.images, bi.create_date AS createDate FROM building_info bi WHERE 1 = 1 ORDER BY bi.create_date DESC LIMIT 0,10;
2023-04-24 23:31:01.909 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-04-24 23:31:02.529 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:02.530 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:02.531 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:02.532 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:02.541 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:31:02 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info;
2023-04-24 23:31:02.543 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:31:02 | 耗时 1 ms | SQL 语句：
SELECT ID,name,address,street,community,usage_area,surface_area,type,rooms,units,layers,images,create_date FROM building_info;
2023-04-24 23:31:02.545 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:31:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 1;
2023-04-24 23:31:02.548 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:31:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM houses_info hi LEFT JOIN building_info bi ON (bi.id = hi.building_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1;
2023-04-24 23:31:02.551 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:31:02 | 耗时 1 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) WHERE 1 = 1 ORDER BY hi.create_date DESC LIMIT 0,10;
2023-04-24 23:31:04.163 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:04.181 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:31:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2023-04-24 23:31:04.182 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:31:04 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2023-04-24 23:31:12.939 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:12.941 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:12.946 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:31:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2023-04-24 23:31:12.949 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:31:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2023-04-24 23:31:12.952 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:31:12 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2023-04-24 23:31:15.456 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:31:15.611 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:31:15 | 耗时 150 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi WHERE 1 = 1;
2023-04-24 23:31:15.614 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:31:15 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.park_num AS parkNum, pi.status, pi.car_num AS carNum, pi.owner, pi.phone, pi.community, pi.own_date AS ownDate, pi.area FROM park_info pi WHERE 1 = 1 ORDER BY pi.status DESC LIMIT 0,10;
2023-04-24 23:33:05.034 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:33:05.037 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:33:05.039 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:33:05.041 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:33:05.045 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:33:05.047 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:33:05.050 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:33:05.053 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:33:05.055 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-04-24 23:33:05.056 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:33:05.059 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:33:05.064 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:33:05.067 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:33:05.070 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:33:05.072 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:33:05 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:35:49.846 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 23:35:49.876 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:35:49 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-24T23:35:49.855+0800' WHERE username = '荍荍加油';
2023-04-24 23:35:49.882 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:35:49 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 23:35:49.920 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:35:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '荍荍加油', '2023-04-24T23:35:49.890+0800', '', '127.0.0.1' );
2023-04-24 23:35:49.949 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:35:49 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-24 23:35:49.968 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:35:49.976 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:35:49 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油') order by m.order_num;
2023-04-24 23:35:50.156 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:35:50.168 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:35:50.177 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:35:50.177 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:35:50.180 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:35:50.182 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:35:50.183 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:35:50.187 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:35:50.187 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:35:50.190 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:35:50.190 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:35:50.200 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 5 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:35:50.204 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:35:50.209 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:35:50.213 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-04-24 23:35:50 | 耗时 1 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:36:28.786 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 23:36:28.798 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:28 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-24T23:36:28.788+0800' WHERE username = '荍荍加油';
2023-04-24 23:36:28.800 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:28 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 23:36:28.812 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:28 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '荍荍加油', '2023-04-24T23:36:28.806+0800', '', '127.0.0.1' );
2023-04-24 23:36:28.832 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:28 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-24 23:36:28.853 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:28.858 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-04-24 23:36:28 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油') order by m.order_num;
2023-04-24 23:36:29.001 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:29.007 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:29.015 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:36:29.015 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:36:29.019 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:29.020 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:36:29.024 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:29.024 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:36:29.026 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:36:29.027 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:36:29.029 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:36:29.035 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 4 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:36:29.041 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:36:29.045 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:36:29.047 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:29 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:36:37.356 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:37.356 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:37.360 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:36:37.361 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:36:37.363 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:36:37.363 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:37.365 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:36:37.366 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:36:37.370 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:37.374 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:36:37.374 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 5 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:36:37.375 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:36:37.375 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:36:37.379 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:36:37.380 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-04-24 23:36:37 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:36:42.638 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:42.638 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:42.642 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:36:42.642 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:36:42.644 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:36:42.644 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:42.645 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:36:42.645 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:42.647 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:36:42.648 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:36:42.649 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:36:42.650 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:36:42.654 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:36:42.657 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:36:42.658 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:36:42 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:36:47.210 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:47.210 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:36:47.214 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2023-04-24 23:36:47.216 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:36:47.216 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2023-04-24 23:36:47.218 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:47.218 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2023-04-24 23:36:47.219 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:36:47.220 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:36:47.222 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:36:47.224 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:36:47.225 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2023-04-24 23:36:47.229 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2023-04-24 23:36:47.231 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM building_info;
2023-04-24 23:36:47.233 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-04-24 23:36:47 | 耗时 0 ms | SQL 语句：
select count(*) from building_info where type = 2;
2023-04-24 23:38:32.014 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-04-24 23:38:32.024 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-04-24T23:38:32.016+0800' WHERE username = '荍荍加油';
2023-04-24 23:38:32.027 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '荍荍加油' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-04-24 23:38:32.039 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '荍荍加油', '2023-04-24T23:38:32.032+0800', '', '127.0.0.1' );
2023-04-24 23:38:32.051 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '荍荍加油' and m.perms is not null and m.perms <> '';
2023-04-24 23:38:32.064 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:38:32.071 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '荍荍加油') order by m.order_num;
2023-04-24 23:38:32.166 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:38:32.168 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:38:32.174 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:38:32.177 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:38:32.179 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:38:32.180 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:38:32.185 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:38:32.195 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-24 23:38:32.199 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-24 23:38:32.204 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-24 23:38:32.208 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:38:32.228 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:38:32 | 耗时 17 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-24 23:39:57.493 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:39:57.494 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:39:57.497 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-24 23:39:57.498 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:39:57.500 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:39:57.502 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:39:57.503 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-24 23:39:57.504 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:39:57.506 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
2023-04-24 23:39:57.509 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 2 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-24 23:39:57.510 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:39:57.513 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-04-24 23:39:57 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-24 23:40:01.265 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:40:01.267 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-04-24 23:40:01.270 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date FROM owner_info WHERE user_id = 16;
2023-04-24 23:40:01.272 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-04-24 23:40:01.274 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 3;
2023-04-24 23:40:01.275 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:40:01.277 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-04-24 23:40:01.278 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 3 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 3 AND pm.type = 2) AS on4;
2023-04-24 23:40:01.280 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-04-24 23:40:01.280 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-04-24 23:40:01.284 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( ANY_VALUE(spo.days), '%m-%d' ) AS days, IFNULL(ANY_VALUE(er.temperature),0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2023-04-24 23:40:01.285 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-04-24 23:40:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '荍荍加油' group by days;
